"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/siwe@2.1.4_ethers@5.7.0";
exports.ids = ["vendor-chunks/siwe@2.1.4_ethers@5.7.0"];
exports.modules = {

/***/ "(rsc)/../../node_modules/.pnpm/siwe@2.1.4_ethers@5.7.0/node_modules/siwe/dist/client.js":
/*!*****************************************************************************************!*\
  !*** ../../node_modules/.pnpm/siwe@2.1.4_ethers@5.7.0/node_modules/siwe/dist/client.js ***!
  \*****************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nvar __createBinding = (void 0) && (void 0).__createBinding || (Object.create ? function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n        desc = {\n            enumerable: true,\n            get: function() {\n                return m[k];\n            }\n        };\n    }\n    Object.defineProperty(o, k2, desc);\n} : function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n});\nvar __setModuleDefault = (void 0) && (void 0).__setModuleDefault || (Object.create ? function(o, v) {\n    Object.defineProperty(o, \"default\", {\n        enumerable: true,\n        value: v\n    });\n} : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (void 0) && (void 0).__importStar || function(mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) {\n        for(var k in mod)if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    }\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __awaiter = (void 0) && (void 0).__awaiter || function(thisArg, _arguments, P, generator) {\n    function adopt(value) {\n        return value instanceof P ? value : new P(function(resolve) {\n            resolve(value);\n        });\n    }\n    return new (P || (P = Promise))(function(resolve, reject) {\n        function fulfilled(value) {\n            try {\n                step(generator.next(value));\n            } catch (e) {\n                reject(e);\n            }\n        }\n        function rejected(value) {\n            try {\n                step(generator[\"throw\"](value));\n            } catch (e) {\n                reject(e);\n            }\n        }\n        function step(result) {\n            result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n        }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.SiweMessage = void 0;\n// TODO: Figure out how to get types from this lib:\nconst siwe_parser_1 = __webpack_require__(/*! @spruceid/siwe-parser */ \"(rsc)/../../node_modules/.pnpm/@spruceid+siwe-parser@2.0.2/node_modules/@spruceid/siwe-parser/dist/parsers.js\");\nconst uri = __importStar(__webpack_require__(/*! valid-url */ \"(rsc)/../../node_modules/.pnpm/valid-url@1.0.9/node_modules/valid-url/index.js\"));\nconst ethersCompat_1 = __webpack_require__(/*! ./ethersCompat */ \"(rsc)/../../node_modules/.pnpm/siwe@2.1.4_ethers@5.7.0/node_modules/siwe/dist/ethersCompat.js\");\nconst types_1 = __webpack_require__(/*! ./types */ \"(rsc)/../../node_modules/.pnpm/siwe@2.1.4_ethers@5.7.0/node_modules/siwe/dist/types.js\");\nconst utils_1 = __webpack_require__(/*! ./utils */ \"(rsc)/../../node_modules/.pnpm/siwe@2.1.4_ethers@5.7.0/node_modules/siwe/dist/utils.js\");\nclass SiweMessage {\n    /**\n     * Creates a parsed Sign-In with Ethereum Message (EIP-4361) object from a\n     * string or an object. If a string is used an ABNF parser is called to\n     * validate the parameter, otherwise the fields are attributed.\n     * @param param {string | SiweMessage} Sign message as a string or an object.\n     */ constructor(param){\n        if (typeof param === \"string\") {\n            const parsedMessage = new siwe_parser_1.ParsedMessage(param);\n            this.domain = parsedMessage.domain;\n            this.address = parsedMessage.address;\n            this.statement = parsedMessage.statement;\n            this.uri = parsedMessage.uri;\n            this.version = parsedMessage.version;\n            this.nonce = parsedMessage.nonce;\n            this.issuedAt = parsedMessage.issuedAt;\n            this.expirationTime = parsedMessage.expirationTime;\n            this.notBefore = parsedMessage.notBefore;\n            this.requestId = parsedMessage.requestId;\n            this.chainId = parsedMessage.chainId;\n            this.resources = parsedMessage.resources;\n        } else {\n            Object.assign(this, param);\n            if (typeof this.chainId === \"string\") {\n                this.chainId = (0, siwe_parser_1.parseIntegerNumber)(this.chainId);\n            }\n        }\n        this.nonce = this.nonce || (0, utils_1.generateNonce)();\n        this.validateMessage();\n    }\n    /**\n     * This function can be used to retrieve an EIP-4361 formated message for\n     * signature, although you can call it directly it's advised to use\n     * [prepareMessage()] instead which will resolve to the correct method based\n     * on the [type] attribute of this object, in case of other formats being\n     * implemented.\n     * @returns {string} EIP-4361 formated message, ready for EIP-191 signing.\n     */ toMessage() {\n        /** Validates all fields of the object */ this.validateMessage();\n        const header = `${this.domain} wants you to sign in with your Ethereum account:`;\n        const uriField = `URI: ${this.uri}`;\n        let prefix = [\n            header,\n            this.address\n        ].join(\"\\n\");\n        const versionField = `Version: ${this.version}`;\n        if (!this.nonce) {\n            this.nonce = (0, utils_1.generateNonce)();\n        }\n        const chainField = `Chain ID: ` + this.chainId || 0;\n        const nonceField = `Nonce: ${this.nonce}`;\n        const suffixArray = [\n            uriField,\n            versionField,\n            chainField,\n            nonceField\n        ];\n        this.issuedAt = this.issuedAt || new Date().toISOString();\n        suffixArray.push(`Issued At: ${this.issuedAt}`);\n        if (this.expirationTime) {\n            const expiryField = `Expiration Time: ${this.expirationTime}`;\n            suffixArray.push(expiryField);\n        }\n        if (this.notBefore) {\n            suffixArray.push(`Not Before: ${this.notBefore}`);\n        }\n        if (this.requestId) {\n            suffixArray.push(`Request ID: ${this.requestId}`);\n        }\n        if (this.resources) {\n            suffixArray.push([\n                `Resources:`,\n                ...this.resources.map((x)=>`- ${x}`)\n            ].join(\"\\n\"));\n        }\n        const suffix = suffixArray.join(\"\\n\");\n        prefix = [\n            prefix,\n            this.statement\n        ].join(\"\\n\\n\");\n        if (this.statement) {\n            prefix += \"\\n\";\n        }\n        return [\n            prefix,\n            suffix\n        ].join(\"\\n\");\n    }\n    /**\n     * This method parses all the fields in the object and creates a messaging for signing\n     * message according with the type defined.\n     * @returns {string} Returns a message ready to be signed according with the\n     * type defined in the object.\n     */ prepareMessage() {\n        let message;\n        switch(this.version){\n            case \"1\":\n                {\n                    message = this.toMessage();\n                    break;\n                }\n            default:\n                {\n                    message = this.toMessage();\n                    break;\n                }\n        }\n        return message;\n    }\n    /**\n     * @deprecated\n     * Verifies the integrity of the object by matching its signature.\n     * @param signature Signature to match the address in the message.\n     * @param provider Ethers provider to be used for EIP-1271 validation\n     */ validate(signature, provider) {\n        return __awaiter(this, void 0, void 0, function*() {\n            console.warn(\"validate() has been deprecated, please update your code to use verify(). validate() may be removed in future versions.\");\n            return this.verify({\n                signature\n            }, {\n                provider,\n                suppressExceptions: false\n            }).then(({ data })=>data).catch(({ error })=>{\n                throw error;\n            });\n        });\n    }\n    /**\n     * Verifies the integrity of the object by matching its signature.\n     * @param params Parameters to verify the integrity of the message, signature is required.\n     * @returns {Promise<SiweMessage>} This object if valid.\n     */ verify(params, opts = {\n        suppressExceptions: false\n    }) {\n        return __awaiter(this, void 0, void 0, function*() {\n            return new Promise((resolve, reject)=>{\n                var _a, _b, _c;\n                const fail = (result)=>{\n                    if (opts.suppressExceptions) {\n                        return resolve(result);\n                    } else {\n                        return reject(result);\n                    }\n                };\n                const invalidParams = (0, utils_1.checkInvalidKeys)(params, types_1.VerifyParamsKeys);\n                if (invalidParams.length > 0) {\n                    fail({\n                        success: false,\n                        data: this,\n                        error: new Error(`${invalidParams.join(\", \")} is/are not valid key(s) for VerifyParams.`)\n                    });\n                }\n                const invalidOpts = (0, utils_1.checkInvalidKeys)(opts, types_1.VerifyOptsKeys);\n                if (invalidParams.length > 0) {\n                    fail({\n                        success: false,\n                        data: this,\n                        error: new Error(`${invalidOpts.join(\", \")} is/are not valid key(s) for VerifyOpts.`)\n                    });\n                }\n                const { signature, domain, nonce, time } = params;\n                /** Domain binding */ if (domain && domain !== this.domain) {\n                    fail({\n                        success: false,\n                        data: this,\n                        error: new types_1.SiweError(types_1.SiweErrorType.DOMAIN_MISMATCH, domain, this.domain)\n                    });\n                }\n                /** Nonce binding */ if (nonce && nonce !== this.nonce) {\n                    fail({\n                        success: false,\n                        data: this,\n                        error: new types_1.SiweError(types_1.SiweErrorType.NONCE_MISMATCH, nonce, this.nonce)\n                    });\n                }\n                /** Check time or now */ const checkTime = new Date(time || new Date());\n                /** Message not expired */ if (this.expirationTime) {\n                    const expirationDate = new Date(this.expirationTime);\n                    if (checkTime.getTime() >= expirationDate.getTime()) {\n                        fail({\n                            success: false,\n                            data: this,\n                            error: new types_1.SiweError(types_1.SiweErrorType.EXPIRED_MESSAGE, `${checkTime.toISOString()} < ${expirationDate.toISOString()}`, `${checkTime.toISOString()} >= ${expirationDate.toISOString()}`)\n                        });\n                    }\n                }\n                /** Message is valid already */ if (this.notBefore) {\n                    const notBefore = new Date(this.notBefore);\n                    if (checkTime.getTime() < notBefore.getTime()) {\n                        fail({\n                            success: false,\n                            data: this,\n                            error: new types_1.SiweError(types_1.SiweErrorType.NOT_YET_VALID_MESSAGE, `${checkTime.toISOString()} >= ${notBefore.toISOString()}`, `${checkTime.toISOString()} < ${notBefore.toISOString()}`)\n                        });\n                    }\n                }\n                let EIP4361Message;\n                try {\n                    EIP4361Message = this.prepareMessage();\n                } catch (e) {\n                    fail({\n                        success: false,\n                        data: this,\n                        error: e\n                    });\n                }\n                /** Recover address from signature */ let addr;\n                try {\n                    addr = (0, ethersCompat_1.verifyMessage)(EIP4361Message, signature);\n                } catch (e) {\n                    console.error(e);\n                }\n                /** Match signature with message's address */ if (addr === this.address) {\n                    return resolve({\n                        success: true,\n                        data: this\n                    });\n                } else {\n                    const EIP1271Promise = (0, utils_1.checkContractWalletSignature)(this, signature, opts.provider).then((isValid)=>{\n                        if (!isValid) {\n                            return {\n                                success: false,\n                                data: this,\n                                error: new types_1.SiweError(types_1.SiweErrorType.INVALID_SIGNATURE, addr, `Resolved address to be ${this.address}`)\n                            };\n                        }\n                        return {\n                            success: true,\n                            data: this\n                        };\n                    }).catch((error)=>{\n                        return {\n                            success: false,\n                            data: this,\n                            error\n                        };\n                    });\n                    Promise.all([\n                        EIP1271Promise,\n                        (_c = (_b = (_a = opts === null || opts === void 0 ? void 0 : opts.verificationFallback) === null || _a === void 0 ? void 0 : _a.call(opts, params, opts, this, EIP1271Promise)) === null || _b === void 0 ? void 0 : _b.then((res)=>res)) === null || _c === void 0 ? void 0 : _c.catch((res)=>res)\n                    ]).then(([EIP1271Response, fallbackResponse])=>{\n                        if (fallbackResponse) {\n                            if (fallbackResponse.success) {\n                                return resolve(fallbackResponse);\n                            } else {\n                                fail(fallbackResponse);\n                            }\n                        } else {\n                            if (EIP1271Response.success) {\n                                return resolve(EIP1271Response);\n                            } else {\n                                fail(EIP1271Response);\n                            }\n                        }\n                    });\n                }\n            });\n        });\n    }\n    /**\n     * Validates the values of this object fields.\n     * @throws Throws an {ErrorType} if a field is invalid.\n     */ validateMessage(...args) {\n        var _a;\n        /** Checks if the user might be using the function to verify instead of validate. */ if (args.length > 0) {\n            throw new types_1.SiweError(types_1.SiweErrorType.UNABLE_TO_PARSE, `Unexpected argument in the validateMessage function.`);\n        }\n        /** `domain` check. */ if (!this.domain || this.domain.length === 0 || !/[^#?]*/.test(this.domain)) {\n            throw new types_1.SiweError(types_1.SiweErrorType.INVALID_DOMAIN, `${this.domain} to be a valid domain.`);\n        }\n        /** EIP-55 `address` check. */ if (!(0, siwe_parser_1.isEIP55Address)(this.address)) {\n            throw new types_1.SiweError(types_1.SiweErrorType.INVALID_ADDRESS, (0, ethersCompat_1.getAddress)(this.address), this.address);\n        }\n        /** Check if the URI is valid. */ if (!uri.isUri(this.uri)) {\n            throw new types_1.SiweError(types_1.SiweErrorType.INVALID_URI, `${this.uri} to be a valid uri.`);\n        }\n        /** Check if the version is 1. */ if (this.version !== \"1\") {\n            throw new types_1.SiweError(types_1.SiweErrorType.INVALID_MESSAGE_VERSION, \"1\", this.version);\n        }\n        /** Check if the nonce is alphanumeric and bigger then 8 characters */ const nonce = (_a = this === null || this === void 0 ? void 0 : this.nonce) === null || _a === void 0 ? void 0 : _a.match(/[a-zA-Z0-9]{8,}/);\n        if (!nonce || this.nonce.length < 8 || nonce[0] !== this.nonce) {\n            throw new types_1.SiweError(types_1.SiweErrorType.INVALID_NONCE, `Length > 8 (${nonce.length}). Alphanumeric.`, this.nonce);\n        }\n        /** `issuedAt` conforms to ISO-8601 and is a valid date. */ if (this.issuedAt) {\n            if (!(0, utils_1.isValidISO8601Date)(this.issuedAt)) {\n                throw new Error(types_1.SiweErrorType.INVALID_TIME_FORMAT);\n            }\n        }\n        /** `expirationTime` conforms to ISO-8601 and is a valid date. */ if (this.expirationTime) {\n            if (!(0, utils_1.isValidISO8601Date)(this.expirationTime)) {\n                throw new Error(types_1.SiweErrorType.INVALID_TIME_FORMAT);\n            }\n        }\n        /** `notBefore` conforms to ISO-8601 and is a valid date. */ if (this.notBefore) {\n            if (!(0, utils_1.isValidISO8601Date)(this.notBefore)) {\n                throw new Error(types_1.SiweErrorType.INVALID_TIME_FORMAT);\n            }\n        }\n    }\n}\nexports.SiweMessage = SiweMessage;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/../../node_modules/.pnpm/siwe@2.1.4_ethers@5.7.0/node_modules/siwe/dist/client.js\n");

/***/ }),

/***/ "(rsc)/../../node_modules/.pnpm/siwe@2.1.4_ethers@5.7.0/node_modules/siwe/dist/ethersCompat.js":
/*!***********************************************************************************************!*\
  !*** ../../node_modules/.pnpm/siwe@2.1.4_ethers@5.7.0/node_modules/siwe/dist/ethersCompat.js ***!
  \***********************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nvar _a, _b, _c;\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.getAddress = exports.hashMessage = exports.verifyMessage = void 0;\nconst ethers_1 = __webpack_require__(/*! ethers */ \"(rsc)/../../node_modules/.pnpm/ethers@5.7.0_bufferutil@4.0.7/node_modules/ethers/lib.esm/index.js\");\nexports.verifyMessage = (_a = ethers_1.utils === null || ethers_1.utils === void 0 ? void 0 : ethers_1.utils.verifyMessage) !== null && _a !== void 0 ? _a : ethers_1.verifyMessage;\nexports.hashMessage = (_b = ethers_1.utils === null || ethers_1.utils === void 0 ? void 0 : ethers_1.utils.hashMessage) !== null && _b !== void 0 ? _b : ethers_1.hashMessage;\nexports.getAddress = (_c = ethers_1.utils === null || ethers_1.utils === void 0 ? void 0 : ethers_1.utils.getAddress) !== null && _c !== void 0 ? _c : ethers_1.getAddress;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi4vLi4vbm9kZV9tb2R1bGVzLy5wbnBtL3Npd2VAMi4xLjRfZXRoZXJzQDUuNy4wL25vZGVfbW9kdWxlcy9zaXdlL2Rpc3QvZXRoZXJzQ29tcGF0LmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsSUFBSUEsSUFBSUMsSUFBSUM7QUFDWkMsOENBQTZDO0lBQUVHLE9BQU87QUFBSyxDQUFDLEVBQUM7QUFDN0RELGtCQUFrQixHQUFHQSxtQkFBbUIsR0FBR0EscUJBQXFCLEdBQUcsS0FBSztBQUN4RSxNQUFNSyxXQUFXQyxtQkFBT0EsQ0FBQyxpSEFBUTtBQUNqQ04scUJBQXFCLEdBQUcsQ0FBQ0wsS0FBS1UsU0FBU0UsS0FBSyxLQUFLLFFBQVFGLFNBQVNFLEtBQUssS0FBSyxLQUFLLElBQUksS0FBSyxJQUFJRixTQUFTRSxLQUFLLENBQUNILGFBQWEsTUFBTSxRQUFRVCxPQUFPLEtBQUssSUFBSUEsS0FBS1UsU0FBU0QsYUFBYTtBQUNuTEosbUJBQW1CLEdBQUcsQ0FBQ0osS0FBS1MsU0FBU0UsS0FBSyxLQUFLLFFBQVFGLFNBQVNFLEtBQUssS0FBSyxLQUFLLElBQUksS0FBSyxJQUFJRixTQUFTRSxLQUFLLENBQUNKLFdBQVcsTUFBTSxRQUFRUCxPQUFPLEtBQUssSUFBSUEsS0FBS1MsU0FBU0YsV0FBVztBQUM3S0gsa0JBQWtCLEdBQUcsQ0FBQ0gsS0FBS1EsU0FBU0UsS0FBSyxLQUFLLFFBQVFGLFNBQVNFLEtBQUssS0FBSyxLQUFLLElBQUksS0FBSyxJQUFJRixTQUFTRSxLQUFLLENBQUNMLFVBQVUsTUFBTSxRQUFRTCxPQUFPLEtBQUssSUFBSUEsS0FBS1EsU0FBU0gsVUFBVSIsInNvdXJjZXMiOlsid2VicGFjazovL0B0b2tlbnN0cmVhbS93ZWIvLi4vLi4vbm9kZV9tb2R1bGVzLy5wbnBtL3Npd2VAMi4xLjRfZXRoZXJzQDUuNy4wL25vZGVfbW9kdWxlcy9zaXdlL2Rpc3QvZXRoZXJzQ29tcGF0LmpzP2MyODIiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG52YXIgX2EsIF9iLCBfYztcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuZ2V0QWRkcmVzcyA9IGV4cG9ydHMuaGFzaE1lc3NhZ2UgPSBleHBvcnRzLnZlcmlmeU1lc3NhZ2UgPSB2b2lkIDA7XG5jb25zdCBldGhlcnNfMSA9IHJlcXVpcmUoXCJldGhlcnNcIik7XG5leHBvcnRzLnZlcmlmeU1lc3NhZ2UgPSAoX2EgPSBldGhlcnNfMS51dGlscyA9PT0gbnVsbCB8fCBldGhlcnNfMS51dGlscyA9PT0gdm9pZCAwID8gdm9pZCAwIDogZXRoZXJzXzEudXRpbHMudmVyaWZ5TWVzc2FnZSkgIT09IG51bGwgJiYgX2EgIT09IHZvaWQgMCA/IF9hIDogZXRoZXJzXzEudmVyaWZ5TWVzc2FnZTtcbmV4cG9ydHMuaGFzaE1lc3NhZ2UgPSAoX2IgPSBldGhlcnNfMS51dGlscyA9PT0gbnVsbCB8fCBldGhlcnNfMS51dGlscyA9PT0gdm9pZCAwID8gdm9pZCAwIDogZXRoZXJzXzEudXRpbHMuaGFzaE1lc3NhZ2UpICE9PSBudWxsICYmIF9iICE9PSB2b2lkIDAgPyBfYiA6IGV0aGVyc18xLmhhc2hNZXNzYWdlO1xuZXhwb3J0cy5nZXRBZGRyZXNzID0gKF9jID0gZXRoZXJzXzEudXRpbHMgPT09IG51bGwgfHwgZXRoZXJzXzEudXRpbHMgPT09IHZvaWQgMCA/IHZvaWQgMCA6IGV0aGVyc18xLnV0aWxzLmdldEFkZHJlc3MpICE9PSBudWxsICYmIF9jICE9PSB2b2lkIDAgPyBfYyA6IGV0aGVyc18xLmdldEFkZHJlc3M7XG4iXSwibmFtZXMiOlsiX2EiLCJfYiIsIl9jIiwiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJleHBvcnRzIiwidmFsdWUiLCJnZXRBZGRyZXNzIiwiaGFzaE1lc3NhZ2UiLCJ2ZXJpZnlNZXNzYWdlIiwiZXRoZXJzXzEiLCJyZXF1aXJlIiwidXRpbHMiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/../../node_modules/.pnpm/siwe@2.1.4_ethers@5.7.0/node_modules/siwe/dist/ethersCompat.js\n");

/***/ }),

/***/ "(rsc)/../../node_modules/.pnpm/siwe@2.1.4_ethers@5.7.0/node_modules/siwe/dist/siwe.js":
/*!***************************************************************************************!*\
  !*** ../../node_modules/.pnpm/siwe@2.1.4_ethers@5.7.0/node_modules/siwe/dist/siwe.js ***!
  \***************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nvar __createBinding = (void 0) && (void 0).__createBinding || (Object.create ? function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n        desc = {\n            enumerable: true,\n            get: function() {\n                return m[k];\n            }\n        };\n    }\n    Object.defineProperty(o, k2, desc);\n} : function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n});\nvar __exportStar = (void 0) && (void 0).__exportStar || function(m, exports1) {\n    for(var p in m)if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports1, p)) __createBinding(exports1, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\n__exportStar(__webpack_require__(/*! ./client */ \"(rsc)/../../node_modules/.pnpm/siwe@2.1.4_ethers@5.7.0/node_modules/siwe/dist/client.js\"), exports);\n__exportStar(__webpack_require__(/*! ./types */ \"(rsc)/../../node_modules/.pnpm/siwe@2.1.4_ethers@5.7.0/node_modules/siwe/dist/types.js\"), exports);\n__exportStar(__webpack_require__(/*! ./utils */ \"(rsc)/../../node_modules/.pnpm/siwe@2.1.4_ethers@5.7.0/node_modules/siwe/dist/utils.js\"), exports);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi4vLi4vbm9kZV9tb2R1bGVzLy5wbnBtL3Npd2VAMi4xLjRfZXRoZXJzQDUuNy4wL25vZGVfbW9kdWxlcy9zaXdlL2Rpc3Qvc2l3ZS5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLElBQUlBLGtCQUFrQixDQUFDLE1BQUcsS0FBSyxPQUFHLEVBQUVBLGVBQWUsSUFBTUMsQ0FBQUEsT0FBT0MsTUFBTSxHQUFJLFNBQVNDLENBQUMsRUFBRUMsQ0FBQyxFQUFFQyxDQUFDLEVBQUVDLEVBQUU7SUFDMUYsSUFBSUEsT0FBT0MsV0FBV0QsS0FBS0Q7SUFDM0IsSUFBSUcsT0FBT1AsT0FBT1Esd0JBQXdCLENBQUNMLEdBQUdDO0lBQzlDLElBQUksQ0FBQ0csUUFBUyxVQUFTQSxPQUFPLENBQUNKLEVBQUVNLFVBQVUsR0FBR0YsS0FBS0csUUFBUSxJQUFJSCxLQUFLSSxZQUFZLEdBQUc7UUFDakZKLE9BQU87WUFBRUssWUFBWTtZQUFNQyxLQUFLO2dCQUFhLE9BQU9WLENBQUMsQ0FBQ0MsRUFBRTtZQUFFO1FBQUU7SUFDOUQ7SUFDQUosT0FBT2MsY0FBYyxDQUFDWixHQUFHRyxJQUFJRTtBQUNqQyxJQUFNLFNBQVNMLENBQUMsRUFBRUMsQ0FBQyxFQUFFQyxDQUFDLEVBQUVDLEVBQUU7SUFDdEIsSUFBSUEsT0FBT0MsV0FBV0QsS0FBS0Q7SUFDM0JGLENBQUMsQ0FBQ0csR0FBRyxHQUFHRixDQUFDLENBQUNDLEVBQUU7QUFDaEIsQ0FBQztBQUNELElBQUlXLGVBQWUsQ0FBQyxNQUFHLEtBQUssT0FBRyxFQUFFQSxZQUFZLElBQUssU0FBU1osQ0FBQyxFQUFFYSxRQUFPO0lBQ2pFLElBQUssSUFBSUMsS0FBS2QsRUFBRyxJQUFJYyxNQUFNLGFBQWEsQ0FBQ2pCLE9BQU9rQixTQUFTLENBQUNDLGNBQWMsQ0FBQ0MsSUFBSSxDQUFDSixVQUFTQyxJQUFJbEIsZ0JBQWdCaUIsVUFBU2IsR0FBR2M7QUFDM0g7QUFDQWpCLDhDQUE2QztJQUFFcUIsT0FBTztBQUFLLENBQUMsRUFBQztBQUM3RE4sYUFBYU8sbUJBQU9BLENBQUMseUdBQVUsR0FBR047QUFDbENELGFBQWFPLG1CQUFPQSxDQUFDLHVHQUFTLEdBQUdOO0FBQ2pDRCxhQUFhTyxtQkFBT0EsQ0FBQyx1R0FBUyxHQUFHTiIsInNvdXJjZXMiOlsid2VicGFjazovL0B0b2tlbnN0cmVhbS93ZWIvLi4vLi4vbm9kZV9tb2R1bGVzLy5wbnBtL3Npd2VAMi4xLjRfZXRoZXJzQDUuNy4wL25vZGVfbW9kdWxlcy9zaXdlL2Rpc3Qvc2l3ZS5qcz9jYTI3Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xudmFyIF9fY3JlYXRlQmluZGluZyA9ICh0aGlzICYmIHRoaXMuX19jcmVhdGVCaW5kaW5nKSB8fCAoT2JqZWN0LmNyZWF0ZSA/IChmdW5jdGlvbihvLCBtLCBrLCBrMikge1xuICAgIGlmIChrMiA9PT0gdW5kZWZpbmVkKSBrMiA9IGs7XG4gICAgdmFyIGRlc2MgPSBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKG0sIGspO1xuICAgIGlmICghZGVzYyB8fCAoXCJnZXRcIiBpbiBkZXNjID8gIW0uX19lc01vZHVsZSA6IGRlc2Mud3JpdGFibGUgfHwgZGVzYy5jb25maWd1cmFibGUpKSB7XG4gICAgICBkZXNjID0geyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGZ1bmN0aW9uKCkgeyByZXR1cm4gbVtrXTsgfSB9O1xuICAgIH1cbiAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkobywgazIsIGRlc2MpO1xufSkgOiAoZnVuY3Rpb24obywgbSwgaywgazIpIHtcbiAgICBpZiAoazIgPT09IHVuZGVmaW5lZCkgazIgPSBrO1xuICAgIG9bazJdID0gbVtrXTtcbn0pKTtcbnZhciBfX2V4cG9ydFN0YXIgPSAodGhpcyAmJiB0aGlzLl9fZXhwb3J0U3RhcikgfHwgZnVuY3Rpb24obSwgZXhwb3J0cykge1xuICAgIGZvciAodmFyIHAgaW4gbSkgaWYgKHAgIT09IFwiZGVmYXVsdFwiICYmICFPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwoZXhwb3J0cywgcCkpIF9fY3JlYXRlQmluZGluZyhleHBvcnRzLCBtLCBwKTtcbn07XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5fX2V4cG9ydFN0YXIocmVxdWlyZShcIi4vY2xpZW50XCIpLCBleHBvcnRzKTtcbl9fZXhwb3J0U3RhcihyZXF1aXJlKFwiLi90eXBlc1wiKSwgZXhwb3J0cyk7XG5fX2V4cG9ydFN0YXIocmVxdWlyZShcIi4vdXRpbHNcIiksIGV4cG9ydHMpO1xuIl0sIm5hbWVzIjpbIl9fY3JlYXRlQmluZGluZyIsIk9iamVjdCIsImNyZWF0ZSIsIm8iLCJtIiwiayIsImsyIiwidW5kZWZpbmVkIiwiZGVzYyIsImdldE93blByb3BlcnR5RGVzY3JpcHRvciIsIl9fZXNNb2R1bGUiLCJ3cml0YWJsZSIsImNvbmZpZ3VyYWJsZSIsImVudW1lcmFibGUiLCJnZXQiLCJkZWZpbmVQcm9wZXJ0eSIsIl9fZXhwb3J0U3RhciIsImV4cG9ydHMiLCJwIiwicHJvdG90eXBlIiwiaGFzT3duUHJvcGVydHkiLCJjYWxsIiwidmFsdWUiLCJyZXF1aXJlIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/../../node_modules/.pnpm/siwe@2.1.4_ethers@5.7.0/node_modules/siwe/dist/siwe.js\n");

/***/ }),

/***/ "(rsc)/../../node_modules/.pnpm/siwe@2.1.4_ethers@5.7.0/node_modules/siwe/dist/types.js":
/*!****************************************************************************************!*\
  !*** ../../node_modules/.pnpm/siwe@2.1.4_ethers@5.7.0/node_modules/siwe/dist/types.js ***!
  \****************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.SiweErrorType = exports.SiweError = exports.VerifyOptsKeys = exports.VerifyParamsKeys = void 0;\nexports.VerifyParamsKeys = [\n    \"signature\",\n    \"domain\",\n    \"nonce\",\n    \"time\"\n];\nexports.VerifyOptsKeys = [\n    \"provider\",\n    \"suppressExceptions\",\n    \"verificationFallback\"\n];\n/**\n * Interface used to return errors in SiweResponses.\n */ class SiweError {\n    constructor(type, expected, received){\n        this.type = type;\n        this.expected = expected;\n        this.received = received;\n    }\n}\nexports.SiweError = SiweError;\n/**\n * Possible message error types.\n */ var SiweErrorType;\n(function(SiweErrorType) {\n    /** `expirationTime` is present and in the past. */ SiweErrorType[\"EXPIRED_MESSAGE\"] = \"Expired message.\";\n    /** `domain` is not a valid authority or is empty. */ SiweErrorType[\"INVALID_DOMAIN\"] = \"Invalid domain.\";\n    /** `domain` don't match the domain provided for verification. */ SiweErrorType[\"DOMAIN_MISMATCH\"] = \"Domain does not match provided domain for verification.\";\n    /** `nonce` don't match the nonce provided for verification. */ SiweErrorType[\"NONCE_MISMATCH\"] = \"Nonce does not match provided nonce for verification.\";\n    /** `address` does not conform to EIP-55 or is not a valid address. */ SiweErrorType[\"INVALID_ADDRESS\"] = \"Invalid address.\";\n    /** `uri` does not conform to RFC 3986. */ SiweErrorType[\"INVALID_URI\"] = \"URI does not conform to RFC 3986.\";\n    /** `nonce` is smaller then 8 characters or is not alphanumeric */ SiweErrorType[\"INVALID_NONCE\"] = \"Nonce size smaller then 8 characters or is not alphanumeric.\";\n    /** `notBefore` is present and in the future. */ SiweErrorType[\"NOT_YET_VALID_MESSAGE\"] = \"Message is not valid yet.\";\n    /** Signature doesn't match the address of the message. */ SiweErrorType[\"INVALID_SIGNATURE\"] = \"Signature does not match address of the message.\";\n    /** `expirationTime`, `notBefore` or `issuedAt` not complient to ISO-8601. */ SiweErrorType[\"INVALID_TIME_FORMAT\"] = \"Invalid time format.\";\n    /** `version` is not 1. */ SiweErrorType[\"INVALID_MESSAGE_VERSION\"] = \"Invalid message version.\";\n    /** Thrown when some required field is missing. */ SiweErrorType[\"UNABLE_TO_PARSE\"] = \"Unable to parse the message.\";\n})(SiweErrorType = exports.SiweErrorType || (exports.SiweErrorType = {}));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi4vLi4vbm9kZV9tb2R1bGVzLy5wbnBtL3Npd2VAMi4xLjRfZXRoZXJzQDUuNy4wL25vZGVfbW9kdWxlcy9zaXdlL2Rpc3QvdHlwZXMuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYkEsOENBQTZDO0lBQUVHLE9BQU87QUFBSyxDQUFDLEVBQUM7QUFDN0RELHFCQUFxQixHQUFHQSxpQkFBaUIsR0FBR0Esc0JBQXNCLEdBQUdBLHdCQUF3QixHQUFHLEtBQUs7QUFDckdBLHdCQUF3QixHQUFHO0lBQ3ZCO0lBQ0E7SUFDQTtJQUNBO0NBQ0g7QUFDREEsc0JBQXNCLEdBQUc7SUFDckI7SUFDQTtJQUNBO0NBQ0g7QUFDRDs7Q0FFQyxHQUNELE1BQU1HO0lBQ0ZHLFlBQVlDLElBQUksRUFBRUMsUUFBUSxFQUFFQyxRQUFRLENBQUU7UUFDbEMsSUFBSSxDQUFDRixJQUFJLEdBQUdBO1FBQ1osSUFBSSxDQUFDQyxRQUFRLEdBQUdBO1FBQ2hCLElBQUksQ0FBQ0MsUUFBUSxHQUFHQTtJQUNwQjtBQUNKO0FBQ0FULGlCQUFpQixHQUFHRztBQUNwQjs7Q0FFQyxHQUNELElBQUlEO0FBQ0gsVUFBVUEsYUFBYTtJQUNwQixpREFBaUQsR0FDakRBLGFBQWEsQ0FBQyxrQkFBa0IsR0FBRztJQUNuQyxtREFBbUQsR0FDbkRBLGFBQWEsQ0FBQyxpQkFBaUIsR0FBRztJQUNsQywrREFBK0QsR0FDL0RBLGFBQWEsQ0FBQyxrQkFBa0IsR0FBRztJQUNuQyw2REFBNkQsR0FDN0RBLGFBQWEsQ0FBQyxpQkFBaUIsR0FBRztJQUNsQyxvRUFBb0UsR0FDcEVBLGFBQWEsQ0FBQyxrQkFBa0IsR0FBRztJQUNuQyx3Q0FBd0MsR0FDeENBLGFBQWEsQ0FBQyxjQUFjLEdBQUc7SUFDL0IsZ0VBQWdFLEdBQ2hFQSxhQUFhLENBQUMsZ0JBQWdCLEdBQUc7SUFDakMsOENBQThDLEdBQzlDQSxhQUFhLENBQUMsd0JBQXdCLEdBQUc7SUFDekMsd0RBQXdELEdBQ3hEQSxhQUFhLENBQUMsb0JBQW9CLEdBQUc7SUFDckMsMkVBQTJFLEdBQzNFQSxhQUFhLENBQUMsc0JBQXNCLEdBQUc7SUFDdkMsd0JBQXdCLEdBQ3hCQSxhQUFhLENBQUMsMEJBQTBCLEdBQUc7SUFDM0MsZ0RBQWdELEdBQ2hEQSxhQUFhLENBQUMsa0JBQWtCLEdBQUc7QUFDdkMsR0FBR0EsZ0JBQWdCRixRQUFRRSxhQUFhLElBQUtGLENBQUFBLHFCQUFxQixHQUFHLENBQUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9AdG9rZW5zdHJlYW0vd2ViLy4uLy4uL25vZGVfbW9kdWxlcy8ucG5wbS9zaXdlQDIuMS40X2V0aGVyc0A1LjcuMC9ub2RlX21vZHVsZXMvc2l3ZS9kaXN0L3R5cGVzLmpzPzIwNTUiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLlNpd2VFcnJvclR5cGUgPSBleHBvcnRzLlNpd2VFcnJvciA9IGV4cG9ydHMuVmVyaWZ5T3B0c0tleXMgPSBleHBvcnRzLlZlcmlmeVBhcmFtc0tleXMgPSB2b2lkIDA7XG5leHBvcnRzLlZlcmlmeVBhcmFtc0tleXMgPSBbXG4gICAgJ3NpZ25hdHVyZScsXG4gICAgJ2RvbWFpbicsXG4gICAgJ25vbmNlJyxcbiAgICAndGltZScsXG5dO1xuZXhwb3J0cy5WZXJpZnlPcHRzS2V5cyA9IFtcbiAgICAncHJvdmlkZXInLFxuICAgICdzdXBwcmVzc0V4Y2VwdGlvbnMnLFxuICAgICd2ZXJpZmljYXRpb25GYWxsYmFjaycsXG5dO1xuLyoqXG4gKiBJbnRlcmZhY2UgdXNlZCB0byByZXR1cm4gZXJyb3JzIGluIFNpd2VSZXNwb25zZXMuXG4gKi9cbmNsYXNzIFNpd2VFcnJvciB7XG4gICAgY29uc3RydWN0b3IodHlwZSwgZXhwZWN0ZWQsIHJlY2VpdmVkKSB7XG4gICAgICAgIHRoaXMudHlwZSA9IHR5cGU7XG4gICAgICAgIHRoaXMuZXhwZWN0ZWQgPSBleHBlY3RlZDtcbiAgICAgICAgdGhpcy5yZWNlaXZlZCA9IHJlY2VpdmVkO1xuICAgIH1cbn1cbmV4cG9ydHMuU2l3ZUVycm9yID0gU2l3ZUVycm9yO1xuLyoqXG4gKiBQb3NzaWJsZSBtZXNzYWdlIGVycm9yIHR5cGVzLlxuICovXG52YXIgU2l3ZUVycm9yVHlwZTtcbihmdW5jdGlvbiAoU2l3ZUVycm9yVHlwZSkge1xuICAgIC8qKiBgZXhwaXJhdGlvblRpbWVgIGlzIHByZXNlbnQgYW5kIGluIHRoZSBwYXN0LiAqL1xuICAgIFNpd2VFcnJvclR5cGVbXCJFWFBJUkVEX01FU1NBR0VcIl0gPSBcIkV4cGlyZWQgbWVzc2FnZS5cIjtcbiAgICAvKiogYGRvbWFpbmAgaXMgbm90IGEgdmFsaWQgYXV0aG9yaXR5IG9yIGlzIGVtcHR5LiAqL1xuICAgIFNpd2VFcnJvclR5cGVbXCJJTlZBTElEX0RPTUFJTlwiXSA9IFwiSW52YWxpZCBkb21haW4uXCI7XG4gICAgLyoqIGBkb21haW5gIGRvbid0IG1hdGNoIHRoZSBkb21haW4gcHJvdmlkZWQgZm9yIHZlcmlmaWNhdGlvbi4gKi9cbiAgICBTaXdlRXJyb3JUeXBlW1wiRE9NQUlOX01JU01BVENIXCJdID0gXCJEb21haW4gZG9lcyBub3QgbWF0Y2ggcHJvdmlkZWQgZG9tYWluIGZvciB2ZXJpZmljYXRpb24uXCI7XG4gICAgLyoqIGBub25jZWAgZG9uJ3QgbWF0Y2ggdGhlIG5vbmNlIHByb3ZpZGVkIGZvciB2ZXJpZmljYXRpb24uICovXG4gICAgU2l3ZUVycm9yVHlwZVtcIk5PTkNFX01JU01BVENIXCJdID0gXCJOb25jZSBkb2VzIG5vdCBtYXRjaCBwcm92aWRlZCBub25jZSBmb3IgdmVyaWZpY2F0aW9uLlwiO1xuICAgIC8qKiBgYWRkcmVzc2AgZG9lcyBub3QgY29uZm9ybSB0byBFSVAtNTUgb3IgaXMgbm90IGEgdmFsaWQgYWRkcmVzcy4gKi9cbiAgICBTaXdlRXJyb3JUeXBlW1wiSU5WQUxJRF9BRERSRVNTXCJdID0gXCJJbnZhbGlkIGFkZHJlc3MuXCI7XG4gICAgLyoqIGB1cmlgIGRvZXMgbm90IGNvbmZvcm0gdG8gUkZDIDM5ODYuICovXG4gICAgU2l3ZUVycm9yVHlwZVtcIklOVkFMSURfVVJJXCJdID0gXCJVUkkgZG9lcyBub3QgY29uZm9ybSB0byBSRkMgMzk4Ni5cIjtcbiAgICAvKiogYG5vbmNlYCBpcyBzbWFsbGVyIHRoZW4gOCBjaGFyYWN0ZXJzIG9yIGlzIG5vdCBhbHBoYW51bWVyaWMgKi9cbiAgICBTaXdlRXJyb3JUeXBlW1wiSU5WQUxJRF9OT05DRVwiXSA9IFwiTm9uY2Ugc2l6ZSBzbWFsbGVyIHRoZW4gOCBjaGFyYWN0ZXJzIG9yIGlzIG5vdCBhbHBoYW51bWVyaWMuXCI7XG4gICAgLyoqIGBub3RCZWZvcmVgIGlzIHByZXNlbnQgYW5kIGluIHRoZSBmdXR1cmUuICovXG4gICAgU2l3ZUVycm9yVHlwZVtcIk5PVF9ZRVRfVkFMSURfTUVTU0FHRVwiXSA9IFwiTWVzc2FnZSBpcyBub3QgdmFsaWQgeWV0LlwiO1xuICAgIC8qKiBTaWduYXR1cmUgZG9lc24ndCBtYXRjaCB0aGUgYWRkcmVzcyBvZiB0aGUgbWVzc2FnZS4gKi9cbiAgICBTaXdlRXJyb3JUeXBlW1wiSU5WQUxJRF9TSUdOQVRVUkVcIl0gPSBcIlNpZ25hdHVyZSBkb2VzIG5vdCBtYXRjaCBhZGRyZXNzIG9mIHRoZSBtZXNzYWdlLlwiO1xuICAgIC8qKiBgZXhwaXJhdGlvblRpbWVgLCBgbm90QmVmb3JlYCBvciBgaXNzdWVkQXRgIG5vdCBjb21wbGllbnQgdG8gSVNPLTg2MDEuICovXG4gICAgU2l3ZUVycm9yVHlwZVtcIklOVkFMSURfVElNRV9GT1JNQVRcIl0gPSBcIkludmFsaWQgdGltZSBmb3JtYXQuXCI7XG4gICAgLyoqIGB2ZXJzaW9uYCBpcyBub3QgMS4gKi9cbiAgICBTaXdlRXJyb3JUeXBlW1wiSU5WQUxJRF9NRVNTQUdFX1ZFUlNJT05cIl0gPSBcIkludmFsaWQgbWVzc2FnZSB2ZXJzaW9uLlwiO1xuICAgIC8qKiBUaHJvd24gd2hlbiBzb21lIHJlcXVpcmVkIGZpZWxkIGlzIG1pc3NpbmcuICovXG4gICAgU2l3ZUVycm9yVHlwZVtcIlVOQUJMRV9UT19QQVJTRVwiXSA9IFwiVW5hYmxlIHRvIHBhcnNlIHRoZSBtZXNzYWdlLlwiO1xufSkoU2l3ZUVycm9yVHlwZSA9IGV4cG9ydHMuU2l3ZUVycm9yVHlwZSB8fCAoZXhwb3J0cy5TaXdlRXJyb3JUeXBlID0ge30pKTtcbiJdLCJuYW1lcyI6WyJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImV4cG9ydHMiLCJ2YWx1ZSIsIlNpd2VFcnJvclR5cGUiLCJTaXdlRXJyb3IiLCJWZXJpZnlPcHRzS2V5cyIsIlZlcmlmeVBhcmFtc0tleXMiLCJjb25zdHJ1Y3RvciIsInR5cGUiLCJleHBlY3RlZCIsInJlY2VpdmVkIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/../../node_modules/.pnpm/siwe@2.1.4_ethers@5.7.0/node_modules/siwe/dist/types.js\n");

/***/ }),

/***/ "(rsc)/../../node_modules/.pnpm/siwe@2.1.4_ethers@5.7.0/node_modules/siwe/dist/utils.js":
/*!****************************************************************************************!*\
  !*** ../../node_modules/.pnpm/siwe@2.1.4_ethers@5.7.0/node_modules/siwe/dist/utils.js ***!
  \****************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nvar __awaiter = (void 0) && (void 0).__awaiter || function(thisArg, _arguments, P, generator) {\n    function adopt(value) {\n        return value instanceof P ? value : new P(function(resolve) {\n            resolve(value);\n        });\n    }\n    return new (P || (P = Promise))(function(resolve, reject) {\n        function fulfilled(value) {\n            try {\n                step(generator.next(value));\n            } catch (e) {\n                reject(e);\n            }\n        }\n        function rejected(value) {\n            try {\n                step(generator[\"throw\"](value));\n            } catch (e) {\n                reject(e);\n            }\n        }\n        function step(result) {\n            result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n        }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.checkInvalidKeys = exports.isValidISO8601Date = exports.generateNonce = exports.checkContractWalletSignature = void 0;\nconst random_1 = __webpack_require__(/*! @stablelib/random */ \"(rsc)/../../node_modules/.pnpm/@stablelib+random@1.0.2/node_modules/@stablelib/random/lib/random.js\");\nconst ethers_1 = __webpack_require__(/*! ethers */ \"(rsc)/../../node_modules/.pnpm/ethers@5.7.0_bufferutil@4.0.7/node_modules/ethers/lib.esm/index.js\");\nconst ethersCompat_1 = __webpack_require__(/*! ./ethersCompat */ \"(rsc)/../../node_modules/.pnpm/siwe@2.1.4_ethers@5.7.0/node_modules/siwe/dist/ethersCompat.js\");\nconst EIP1271_ABI = [\n    \"function isValidSignature(bytes32 _message, bytes _signature) public view returns (bytes4)\"\n];\nconst EIP1271_MAGICVALUE = \"0x1626ba7e\";\nconst ISO8601 = /^(?<date>[0-9]{4}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01]))[Tt]([01][0-9]|2[0-3]):([0-5][0-9]):([0-5][0-9]|60)(.[0-9]+)?(([Zz])|([+|-]([01][0-9]|2[0-3]):[0-5][0-9]))$/;\n/**\n * This method calls the EIP-1271 method for Smart Contract wallets\n * @param message The EIP-4361 parsed message\n * @param provider Web3 provider able to perform a contract check (Web3/EthersJS).\n * @returns {Promise<boolean>} Checks for the smart contract (if it exists) if\n * the signature is valid for given address.\n */ const checkContractWalletSignature = (message, signature, provider)=>__awaiter(void 0, void 0, void 0, function*() {\n        if (!provider) {\n            return false;\n        }\n        const walletContract = new ethers_1.Contract(message.address, EIP1271_ABI, provider);\n        const hashedMessage = (0, ethersCompat_1.hashMessage)(message.prepareMessage());\n        const res = yield walletContract.isValidSignature(hashedMessage, signature);\n        return res == EIP1271_MAGICVALUE;\n    });\nexports.checkContractWalletSignature = checkContractWalletSignature;\n/**\n * This method leverages a native CSPRNG with support for both browser and Node.js\n * environments in order generate a cryptographically secure nonce for use in the\n * SiweMessage in order to prevent replay attacks.\n *\n * 96 bits has been chosen as a number to sufficiently balance size and security considerations\n * relative to the lifespan of it's usage.\n *\n * @returns cryptographically generated random nonce with 96 bits of entropy encoded with\n * an alphanumeric character set.\n */ const generateNonce = ()=>{\n    const nonce = (0, random_1.randomStringForEntropy)(96);\n    if (!nonce || nonce.length < 8) {\n        throw new Error(\"Error during nonce creation.\");\n    }\n    return nonce;\n};\nexports.generateNonce = generateNonce;\n/**\n * This method matches the given date string against the ISO-8601 regex and also\n * performs checks if it's a valid date.\n * @param inputDate any string to be validated against ISO-8601\n * @returns boolean indicating if the providade date is valid and conformant to ISO-8601\n */ const isValidISO8601Date = (inputDate)=>{\n    /* Split groups and make sure inputDate is in ISO8601 format */ const inputMatch = ISO8601.exec(inputDate);\n    /* if inputMatch is null the date is not ISO-8601 */ if (!inputDate) {\n        return false;\n    }\n    /* Creates a date object with input date to parse for invalid days e.g. Feb, 30 -> Mar, 01 */ const inputDateParsed = new Date(inputMatch.groups.date).toISOString();\n    /* Get groups from new parsed date to compare with the original input */ const parsedInputMatch = ISO8601.exec(inputDateParsed);\n    /* Compare remaining fields */ return inputMatch.groups.date === parsedInputMatch.groups.date;\n};\nexports.isValidISO8601Date = isValidISO8601Date;\nconst checkInvalidKeys = (obj, keys)=>{\n    const invalidKeys = [];\n    Object.keys(obj).forEach((key)=>{\n        if (!keys.includes(key)) {\n            invalidKeys.push(key);\n        }\n    });\n    return invalidKeys;\n};\nexports.checkInvalidKeys = checkInvalidKeys;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/../../node_modules/.pnpm/siwe@2.1.4_ethers@5.7.0/node_modules/siwe/dist/utils.js\n");

/***/ }),

/***/ "(ssr)/../../node_modules/.pnpm/siwe@2.1.4_ethers@5.7.0/node_modules/siwe/dist/client.js":
/*!*****************************************************************************************!*\
  !*** ../../node_modules/.pnpm/siwe@2.1.4_ethers@5.7.0/node_modules/siwe/dist/client.js ***!
  \*****************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.SiweMessage = void 0;\n// TODO: Figure out how to get types from this lib:\nconst siwe_parser_1 = __webpack_require__(/*! @spruceid/siwe-parser */ \"(ssr)/../../node_modules/.pnpm/@spruceid+siwe-parser@2.0.2/node_modules/@spruceid/siwe-parser/dist/parsers.js\");\nconst uri = __importStar(__webpack_require__(/*! valid-url */ \"(ssr)/../../node_modules/.pnpm/valid-url@1.0.9/node_modules/valid-url/index.js\"));\nconst ethersCompat_1 = __webpack_require__(/*! ./ethersCompat */ \"(ssr)/../../node_modules/.pnpm/siwe@2.1.4_ethers@5.7.0/node_modules/siwe/dist/ethersCompat.js\");\nconst types_1 = __webpack_require__(/*! ./types */ \"(ssr)/../../node_modules/.pnpm/siwe@2.1.4_ethers@5.7.0/node_modules/siwe/dist/types.js\");\nconst utils_1 = __webpack_require__(/*! ./utils */ \"(ssr)/../../node_modules/.pnpm/siwe@2.1.4_ethers@5.7.0/node_modules/siwe/dist/utils.js\");\nclass SiweMessage {\n    /**\n     * Creates a parsed Sign-In with Ethereum Message (EIP-4361) object from a\n     * string or an object. If a string is used an ABNF parser is called to\n     * validate the parameter, otherwise the fields are attributed.\n     * @param param {string | SiweMessage} Sign message as a string or an object.\n     */\n    constructor(param) {\n        if (typeof param === 'string') {\n            const parsedMessage = new siwe_parser_1.ParsedMessage(param);\n            this.domain = parsedMessage.domain;\n            this.address = parsedMessage.address;\n            this.statement = parsedMessage.statement;\n            this.uri = parsedMessage.uri;\n            this.version = parsedMessage.version;\n            this.nonce = parsedMessage.nonce;\n            this.issuedAt = parsedMessage.issuedAt;\n            this.expirationTime = parsedMessage.expirationTime;\n            this.notBefore = parsedMessage.notBefore;\n            this.requestId = parsedMessage.requestId;\n            this.chainId = parsedMessage.chainId;\n            this.resources = parsedMessage.resources;\n        }\n        else {\n            Object.assign(this, param);\n            if (typeof this.chainId === 'string') {\n                this.chainId = (0, siwe_parser_1.parseIntegerNumber)(this.chainId);\n            }\n        }\n        this.nonce = this.nonce || (0, utils_1.generateNonce)();\n        this.validateMessage();\n    }\n    /**\n     * This function can be used to retrieve an EIP-4361 formated message for\n     * signature, although you can call it directly it's advised to use\n     * [prepareMessage()] instead which will resolve to the correct method based\n     * on the [type] attribute of this object, in case of other formats being\n     * implemented.\n     * @returns {string} EIP-4361 formated message, ready for EIP-191 signing.\n     */\n    toMessage() {\n        /** Validates all fields of the object */\n        this.validateMessage();\n        const header = `${this.domain} wants you to sign in with your Ethereum account:`;\n        const uriField = `URI: ${this.uri}`;\n        let prefix = [header, this.address].join('\\n');\n        const versionField = `Version: ${this.version}`;\n        if (!this.nonce) {\n            this.nonce = (0, utils_1.generateNonce)();\n        }\n        const chainField = `Chain ID: ` + this.chainId || 0;\n        const nonceField = `Nonce: ${this.nonce}`;\n        const suffixArray = [uriField, versionField, chainField, nonceField];\n        this.issuedAt = this.issuedAt || new Date().toISOString();\n        suffixArray.push(`Issued At: ${this.issuedAt}`);\n        if (this.expirationTime) {\n            const expiryField = `Expiration Time: ${this.expirationTime}`;\n            suffixArray.push(expiryField);\n        }\n        if (this.notBefore) {\n            suffixArray.push(`Not Before: ${this.notBefore}`);\n        }\n        if (this.requestId) {\n            suffixArray.push(`Request ID: ${this.requestId}`);\n        }\n        if (this.resources) {\n            suffixArray.push([`Resources:`, ...this.resources.map(x => `- ${x}`)].join('\\n'));\n        }\n        const suffix = suffixArray.join('\\n');\n        prefix = [prefix, this.statement].join('\\n\\n');\n        if (this.statement) {\n            prefix += '\\n';\n        }\n        return [prefix, suffix].join('\\n');\n    }\n    /**\n     * This method parses all the fields in the object and creates a messaging for signing\n     * message according with the type defined.\n     * @returns {string} Returns a message ready to be signed according with the\n     * type defined in the object.\n     */\n    prepareMessage() {\n        let message;\n        switch (this.version) {\n            case '1': {\n                message = this.toMessage();\n                break;\n            }\n            default: {\n                message = this.toMessage();\n                break;\n            }\n        }\n        return message;\n    }\n    /**\n     * @deprecated\n     * Verifies the integrity of the object by matching its signature.\n     * @param signature Signature to match the address in the message.\n     * @param provider Ethers provider to be used for EIP-1271 validation\n     */\n    validate(signature, provider) {\n        return __awaiter(this, void 0, void 0, function* () {\n            console.warn('validate() has been deprecated, please update your code to use verify(). validate() may be removed in future versions.');\n            return this.verify({ signature }, { provider, suppressExceptions: false })\n                .then(({ data }) => data)\n                .catch(({ error }) => {\n                throw error;\n            });\n        });\n    }\n    /**\n     * Verifies the integrity of the object by matching its signature.\n     * @param params Parameters to verify the integrity of the message, signature is required.\n     * @returns {Promise<SiweMessage>} This object if valid.\n     */\n    verify(params, opts = { suppressExceptions: false }) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return new Promise((resolve, reject) => {\n                var _a, _b, _c;\n                const fail = result => {\n                    if (opts.suppressExceptions) {\n                        return resolve(result);\n                    }\n                    else {\n                        return reject(result);\n                    }\n                };\n                const invalidParams = (0, utils_1.checkInvalidKeys)(params, types_1.VerifyParamsKeys);\n                if (invalidParams.length > 0) {\n                    fail({\n                        success: false,\n                        data: this,\n                        error: new Error(`${invalidParams.join(', ')} is/are not valid key(s) for VerifyParams.`),\n                    });\n                }\n                const invalidOpts = (0, utils_1.checkInvalidKeys)(opts, types_1.VerifyOptsKeys);\n                if (invalidParams.length > 0) {\n                    fail({\n                        success: false,\n                        data: this,\n                        error: new Error(`${invalidOpts.join(', ')} is/are not valid key(s) for VerifyOpts.`),\n                    });\n                }\n                const { signature, domain, nonce, time } = params;\n                /** Domain binding */\n                if (domain && domain !== this.domain) {\n                    fail({\n                        success: false,\n                        data: this,\n                        error: new types_1.SiweError(types_1.SiweErrorType.DOMAIN_MISMATCH, domain, this.domain),\n                    });\n                }\n                /** Nonce binding */\n                if (nonce && nonce !== this.nonce) {\n                    fail({\n                        success: false,\n                        data: this,\n                        error: new types_1.SiweError(types_1.SiweErrorType.NONCE_MISMATCH, nonce, this.nonce),\n                    });\n                }\n                /** Check time or now */\n                const checkTime = new Date(time || new Date());\n                /** Message not expired */\n                if (this.expirationTime) {\n                    const expirationDate = new Date(this.expirationTime);\n                    if (checkTime.getTime() >= expirationDate.getTime()) {\n                        fail({\n                            success: false,\n                            data: this,\n                            error: new types_1.SiweError(types_1.SiweErrorType.EXPIRED_MESSAGE, `${checkTime.toISOString()} < ${expirationDate.toISOString()}`, `${checkTime.toISOString()} >= ${expirationDate.toISOString()}`),\n                        });\n                    }\n                }\n                /** Message is valid already */\n                if (this.notBefore) {\n                    const notBefore = new Date(this.notBefore);\n                    if (checkTime.getTime() < notBefore.getTime()) {\n                        fail({\n                            success: false,\n                            data: this,\n                            error: new types_1.SiweError(types_1.SiweErrorType.NOT_YET_VALID_MESSAGE, `${checkTime.toISOString()} >= ${notBefore.toISOString()}`, `${checkTime.toISOString()} < ${notBefore.toISOString()}`),\n                        });\n                    }\n                }\n                let EIP4361Message;\n                try {\n                    EIP4361Message = this.prepareMessage();\n                }\n                catch (e) {\n                    fail({\n                        success: false,\n                        data: this,\n                        error: e,\n                    });\n                }\n                /** Recover address from signature */\n                let addr;\n                try {\n                    addr = (0, ethersCompat_1.verifyMessage)(EIP4361Message, signature);\n                }\n                catch (e) {\n                    console.error(e);\n                }\n                /** Match signature with message's address */\n                if (addr === this.address) {\n                    return resolve({\n                        success: true,\n                        data: this,\n                    });\n                }\n                else {\n                    const EIP1271Promise = (0, utils_1.checkContractWalletSignature)(this, signature, opts.provider)\n                        .then(isValid => {\n                        if (!isValid) {\n                            return {\n                                success: false,\n                                data: this,\n                                error: new types_1.SiweError(types_1.SiweErrorType.INVALID_SIGNATURE, addr, `Resolved address to be ${this.address}`),\n                            };\n                        }\n                        return {\n                            success: true,\n                            data: this,\n                        };\n                    })\n                        .catch(error => {\n                        return {\n                            success: false,\n                            data: this,\n                            error,\n                        };\n                    });\n                    Promise.all([\n                        EIP1271Promise,\n                        (_c = (_b = (_a = opts === null || opts === void 0 ? void 0 : opts.verificationFallback) === null || _a === void 0 ? void 0 : _a.call(opts, params, opts, this, EIP1271Promise)) === null || _b === void 0 ? void 0 : _b.then(res => res)) === null || _c === void 0 ? void 0 : _c.catch((res) => res)\n                    ]).then(([EIP1271Response, fallbackResponse]) => {\n                        if (fallbackResponse) {\n                            if (fallbackResponse.success) {\n                                return resolve(fallbackResponse);\n                            }\n                            else {\n                                fail(fallbackResponse);\n                            }\n                        }\n                        else {\n                            if (EIP1271Response.success) {\n                                return resolve(EIP1271Response);\n                            }\n                            else {\n                                fail(EIP1271Response);\n                            }\n                        }\n                    });\n                }\n            });\n        });\n    }\n    /**\n     * Validates the values of this object fields.\n     * @throws Throws an {ErrorType} if a field is invalid.\n     */\n    validateMessage(...args) {\n        var _a;\n        /** Checks if the user might be using the function to verify instead of validate. */\n        if (args.length > 0) {\n            throw new types_1.SiweError(types_1.SiweErrorType.UNABLE_TO_PARSE, `Unexpected argument in the validateMessage function.`);\n        }\n        /** `domain` check. */\n        if (!this.domain ||\n            this.domain.length === 0 ||\n            !/[^#?]*/.test(this.domain)) {\n            throw new types_1.SiweError(types_1.SiweErrorType.INVALID_DOMAIN, `${this.domain} to be a valid domain.`);\n        }\n        /** EIP-55 `address` check. */\n        if (!(0, siwe_parser_1.isEIP55Address)(this.address)) {\n            throw new types_1.SiweError(types_1.SiweErrorType.INVALID_ADDRESS, (0, ethersCompat_1.getAddress)(this.address), this.address);\n        }\n        /** Check if the URI is valid. */\n        if (!uri.isUri(this.uri)) {\n            throw new types_1.SiweError(types_1.SiweErrorType.INVALID_URI, `${this.uri} to be a valid uri.`);\n        }\n        /** Check if the version is 1. */\n        if (this.version !== '1') {\n            throw new types_1.SiweError(types_1.SiweErrorType.INVALID_MESSAGE_VERSION, '1', this.version);\n        }\n        /** Check if the nonce is alphanumeric and bigger then 8 characters */\n        const nonce = (_a = this === null || this === void 0 ? void 0 : this.nonce) === null || _a === void 0 ? void 0 : _a.match(/[a-zA-Z0-9]{8,}/);\n        if (!nonce || this.nonce.length < 8 || nonce[0] !== this.nonce) {\n            throw new types_1.SiweError(types_1.SiweErrorType.INVALID_NONCE, `Length > 8 (${nonce.length}). Alphanumeric.`, this.nonce);\n        }\n        /** `issuedAt` conforms to ISO-8601 and is a valid date. */\n        if (this.issuedAt) {\n            if (!(0, utils_1.isValidISO8601Date)(this.issuedAt)) {\n                throw new Error(types_1.SiweErrorType.INVALID_TIME_FORMAT);\n            }\n        }\n        /** `expirationTime` conforms to ISO-8601 and is a valid date. */\n        if (this.expirationTime) {\n            if (!(0, utils_1.isValidISO8601Date)(this.expirationTime)) {\n                throw new Error(types_1.SiweErrorType.INVALID_TIME_FORMAT);\n            }\n        }\n        /** `notBefore` conforms to ISO-8601 and is a valid date. */\n        if (this.notBefore) {\n            if (!(0, utils_1.isValidISO8601Date)(this.notBefore)) {\n                throw new Error(types_1.SiweErrorType.INVALID_TIME_FORMAT);\n            }\n        }\n    }\n}\nexports.SiweMessage = SiweMessage;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/../../node_modules/.pnpm/siwe@2.1.4_ethers@5.7.0/node_modules/siwe/dist/client.js\n");

/***/ }),

/***/ "(ssr)/../../node_modules/.pnpm/siwe@2.1.4_ethers@5.7.0/node_modules/siwe/dist/ethersCompat.js":
/*!***********************************************************************************************!*\
  !*** ../../node_modules/.pnpm/siwe@2.1.4_ethers@5.7.0/node_modules/siwe/dist/ethersCompat.js ***!
  \***********************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nvar _a, _b, _c;\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.getAddress = exports.hashMessage = exports.verifyMessage = void 0;\nconst ethers_1 = __webpack_require__(/*! ethers */ \"(ssr)/../../node_modules/.pnpm/ethers@5.7.0_bufferutil@4.0.7/node_modules/ethers/lib/index.js\");\nexports.verifyMessage = (_a = ethers_1.utils === null || ethers_1.utils === void 0 ? void 0 : ethers_1.utils.verifyMessage) !== null && _a !== void 0 ? _a : ethers_1.verifyMessage;\nexports.hashMessage = (_b = ethers_1.utils === null || ethers_1.utils === void 0 ? void 0 : ethers_1.utils.hashMessage) !== null && _b !== void 0 ? _b : ethers_1.hashMessage;\nexports.getAddress = (_c = ethers_1.utils === null || ethers_1.utils === void 0 ? void 0 : ethers_1.utils.getAddress) !== null && _c !== void 0 ? _c : ethers_1.getAddress;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vLi4vbm9kZV9tb2R1bGVzLy5wbnBtL3Npd2VAMi4xLjRfZXRoZXJzQDUuNy4wL25vZGVfbW9kdWxlcy9zaXdlL2Rpc3QvZXRoZXJzQ29tcGF0LmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2I7QUFDQSw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0Qsa0JBQWtCLEdBQUcsbUJBQW1CLEdBQUcscUJBQXFCO0FBQ2hFLGlCQUFpQixtQkFBTyxDQUFDLDZHQUFRO0FBQ2pDLHFCQUFxQjtBQUNyQixtQkFBbUI7QUFDbkIsa0JBQWtCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vQHRva2Vuc3RyZWFtL3dlYi8uLi8uLi9ub2RlX21vZHVsZXMvLnBucG0vc2l3ZUAyLjEuNF9ldGhlcnNANS43LjAvbm9kZV9tb2R1bGVzL3Npd2UvZGlzdC9ldGhlcnNDb21wYXQuanM/ZWYyMiJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbnZhciBfYSwgX2IsIF9jO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5nZXRBZGRyZXNzID0gZXhwb3J0cy5oYXNoTWVzc2FnZSA9IGV4cG9ydHMudmVyaWZ5TWVzc2FnZSA9IHZvaWQgMDtcbmNvbnN0IGV0aGVyc18xID0gcmVxdWlyZShcImV0aGVyc1wiKTtcbmV4cG9ydHMudmVyaWZ5TWVzc2FnZSA9IChfYSA9IGV0aGVyc18xLnV0aWxzID09PSBudWxsIHx8IGV0aGVyc18xLnV0aWxzID09PSB2b2lkIDAgPyB2b2lkIDAgOiBldGhlcnNfMS51dGlscy52ZXJpZnlNZXNzYWdlKSAhPT0gbnVsbCAmJiBfYSAhPT0gdm9pZCAwID8gX2EgOiBldGhlcnNfMS52ZXJpZnlNZXNzYWdlO1xuZXhwb3J0cy5oYXNoTWVzc2FnZSA9IChfYiA9IGV0aGVyc18xLnV0aWxzID09PSBudWxsIHx8IGV0aGVyc18xLnV0aWxzID09PSB2b2lkIDAgPyB2b2lkIDAgOiBldGhlcnNfMS51dGlscy5oYXNoTWVzc2FnZSkgIT09IG51bGwgJiYgX2IgIT09IHZvaWQgMCA/IF9iIDogZXRoZXJzXzEuaGFzaE1lc3NhZ2U7XG5leHBvcnRzLmdldEFkZHJlc3MgPSAoX2MgPSBldGhlcnNfMS51dGlscyA9PT0gbnVsbCB8fCBldGhlcnNfMS51dGlscyA9PT0gdm9pZCAwID8gdm9pZCAwIDogZXRoZXJzXzEudXRpbHMuZ2V0QWRkcmVzcykgIT09IG51bGwgJiYgX2MgIT09IHZvaWQgMCA/IF9jIDogZXRoZXJzXzEuZ2V0QWRkcmVzcztcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/../../node_modules/.pnpm/siwe@2.1.4_ethers@5.7.0/node_modules/siwe/dist/ethersCompat.js\n");

/***/ }),

/***/ "(ssr)/../../node_modules/.pnpm/siwe@2.1.4_ethers@5.7.0/node_modules/siwe/dist/siwe.js":
/*!***************************************************************************************!*\
  !*** ../../node_modules/.pnpm/siwe@2.1.4_ethers@5.7.0/node_modules/siwe/dist/siwe.js ***!
  \***************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\n__exportStar(__webpack_require__(/*! ./client */ \"(ssr)/../../node_modules/.pnpm/siwe@2.1.4_ethers@5.7.0/node_modules/siwe/dist/client.js\"), exports);\n__exportStar(__webpack_require__(/*! ./types */ \"(ssr)/../../node_modules/.pnpm/siwe@2.1.4_ethers@5.7.0/node_modules/siwe/dist/types.js\"), exports);\n__exportStar(__webpack_require__(/*! ./utils */ \"(ssr)/../../node_modules/.pnpm/siwe@2.1.4_ethers@5.7.0/node_modules/siwe/dist/utils.js\"), exports);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vLi4vbm9kZV9tb2R1bGVzLy5wbnBtL3Npd2VAMi4xLjRfZXRoZXJzQDUuNy4wL25vZGVfbW9kdWxlcy9zaXdlL2Rpc3Qvc2l3ZS5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZUFBZSxvQ0FBb0M7QUFDbkQ7QUFDQTtBQUNBLENBQUM7QUFDRDtBQUNBO0FBQ0EsQ0FBQztBQUNEO0FBQ0E7QUFDQTtBQUNBLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxhQUFhLG1CQUFPLENBQUMseUdBQVU7QUFDL0IsYUFBYSxtQkFBTyxDQUFDLHVHQUFTO0FBQzlCLGFBQWEsbUJBQU8sQ0FBQyx1R0FBUyIsInNvdXJjZXMiOlsid2VicGFjazovL0B0b2tlbnN0cmVhbS93ZWIvLi4vLi4vbm9kZV9tb2R1bGVzLy5wbnBtL3Npd2VAMi4xLjRfZXRoZXJzQDUuNy4wL25vZGVfbW9kdWxlcy9zaXdlL2Rpc3Qvc2l3ZS5qcz8yMjYyIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xudmFyIF9fY3JlYXRlQmluZGluZyA9ICh0aGlzICYmIHRoaXMuX19jcmVhdGVCaW5kaW5nKSB8fCAoT2JqZWN0LmNyZWF0ZSA/IChmdW5jdGlvbihvLCBtLCBrLCBrMikge1xuICAgIGlmIChrMiA9PT0gdW5kZWZpbmVkKSBrMiA9IGs7XG4gICAgdmFyIGRlc2MgPSBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKG0sIGspO1xuICAgIGlmICghZGVzYyB8fCAoXCJnZXRcIiBpbiBkZXNjID8gIW0uX19lc01vZHVsZSA6IGRlc2Mud3JpdGFibGUgfHwgZGVzYy5jb25maWd1cmFibGUpKSB7XG4gICAgICBkZXNjID0geyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGZ1bmN0aW9uKCkgeyByZXR1cm4gbVtrXTsgfSB9O1xuICAgIH1cbiAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkobywgazIsIGRlc2MpO1xufSkgOiAoZnVuY3Rpb24obywgbSwgaywgazIpIHtcbiAgICBpZiAoazIgPT09IHVuZGVmaW5lZCkgazIgPSBrO1xuICAgIG9bazJdID0gbVtrXTtcbn0pKTtcbnZhciBfX2V4cG9ydFN0YXIgPSAodGhpcyAmJiB0aGlzLl9fZXhwb3J0U3RhcikgfHwgZnVuY3Rpb24obSwgZXhwb3J0cykge1xuICAgIGZvciAodmFyIHAgaW4gbSkgaWYgKHAgIT09IFwiZGVmYXVsdFwiICYmICFPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwoZXhwb3J0cywgcCkpIF9fY3JlYXRlQmluZGluZyhleHBvcnRzLCBtLCBwKTtcbn07XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5fX2V4cG9ydFN0YXIocmVxdWlyZShcIi4vY2xpZW50XCIpLCBleHBvcnRzKTtcbl9fZXhwb3J0U3RhcihyZXF1aXJlKFwiLi90eXBlc1wiKSwgZXhwb3J0cyk7XG5fX2V4cG9ydFN0YXIocmVxdWlyZShcIi4vdXRpbHNcIiksIGV4cG9ydHMpO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/../../node_modules/.pnpm/siwe@2.1.4_ethers@5.7.0/node_modules/siwe/dist/siwe.js\n");

/***/ }),

/***/ "(ssr)/../../node_modules/.pnpm/siwe@2.1.4_ethers@5.7.0/node_modules/siwe/dist/types.js":
/*!****************************************************************************************!*\
  !*** ../../node_modules/.pnpm/siwe@2.1.4_ethers@5.7.0/node_modules/siwe/dist/types.js ***!
  \****************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.SiweErrorType = exports.SiweError = exports.VerifyOptsKeys = exports.VerifyParamsKeys = void 0;\nexports.VerifyParamsKeys = [\n    'signature',\n    'domain',\n    'nonce',\n    'time',\n];\nexports.VerifyOptsKeys = [\n    'provider',\n    'suppressExceptions',\n    'verificationFallback',\n];\n/**\n * Interface used to return errors in SiweResponses.\n */\nclass SiweError {\n    constructor(type, expected, received) {\n        this.type = type;\n        this.expected = expected;\n        this.received = received;\n    }\n}\nexports.SiweError = SiweError;\n/**\n * Possible message error types.\n */\nvar SiweErrorType;\n(function (SiweErrorType) {\n    /** `expirationTime` is present and in the past. */\n    SiweErrorType[\"EXPIRED_MESSAGE\"] = \"Expired message.\";\n    /** `domain` is not a valid authority or is empty. */\n    SiweErrorType[\"INVALID_DOMAIN\"] = \"Invalid domain.\";\n    /** `domain` don't match the domain provided for verification. */\n    SiweErrorType[\"DOMAIN_MISMATCH\"] = \"Domain does not match provided domain for verification.\";\n    /** `nonce` don't match the nonce provided for verification. */\n    SiweErrorType[\"NONCE_MISMATCH\"] = \"Nonce does not match provided nonce for verification.\";\n    /** `address` does not conform to EIP-55 or is not a valid address. */\n    SiweErrorType[\"INVALID_ADDRESS\"] = \"Invalid address.\";\n    /** `uri` does not conform to RFC 3986. */\n    SiweErrorType[\"INVALID_URI\"] = \"URI does not conform to RFC 3986.\";\n    /** `nonce` is smaller then 8 characters or is not alphanumeric */\n    SiweErrorType[\"INVALID_NONCE\"] = \"Nonce size smaller then 8 characters or is not alphanumeric.\";\n    /** `notBefore` is present and in the future. */\n    SiweErrorType[\"NOT_YET_VALID_MESSAGE\"] = \"Message is not valid yet.\";\n    /** Signature doesn't match the address of the message. */\n    SiweErrorType[\"INVALID_SIGNATURE\"] = \"Signature does not match address of the message.\";\n    /** `expirationTime`, `notBefore` or `issuedAt` not complient to ISO-8601. */\n    SiweErrorType[\"INVALID_TIME_FORMAT\"] = \"Invalid time format.\";\n    /** `version` is not 1. */\n    SiweErrorType[\"INVALID_MESSAGE_VERSION\"] = \"Invalid message version.\";\n    /** Thrown when some required field is missing. */\n    SiweErrorType[\"UNABLE_TO_PARSE\"] = \"Unable to parse the message.\";\n})(SiweErrorType = exports.SiweErrorType || (exports.SiweErrorType = {}));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vLi4vbm9kZV9tb2R1bGVzLy5wbnBtL3Npd2VAMi4xLjRfZXRoZXJzQDUuNy4wL25vZGVfbW9kdWxlcy9zaXdlL2Rpc3QvdHlwZXMuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QscUJBQXFCLEdBQUcsaUJBQWlCLEdBQUcsc0JBQXNCLEdBQUcsd0JBQXdCO0FBQzdGLHdCQUF3QjtBQUN4QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esc0JBQXNCO0FBQ3RCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpQkFBaUI7QUFDakI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUMsNENBQTRDLHFCQUFxQixLQUFLIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vQHRva2Vuc3RyZWFtL3dlYi8uLi8uLi9ub2RlX21vZHVsZXMvLnBucG0vc2l3ZUAyLjEuNF9ldGhlcnNANS43LjAvbm9kZV9tb2R1bGVzL3Npd2UvZGlzdC90eXBlcy5qcz9jODUzIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5TaXdlRXJyb3JUeXBlID0gZXhwb3J0cy5TaXdlRXJyb3IgPSBleHBvcnRzLlZlcmlmeU9wdHNLZXlzID0gZXhwb3J0cy5WZXJpZnlQYXJhbXNLZXlzID0gdm9pZCAwO1xuZXhwb3J0cy5WZXJpZnlQYXJhbXNLZXlzID0gW1xuICAgICdzaWduYXR1cmUnLFxuICAgICdkb21haW4nLFxuICAgICdub25jZScsXG4gICAgJ3RpbWUnLFxuXTtcbmV4cG9ydHMuVmVyaWZ5T3B0c0tleXMgPSBbXG4gICAgJ3Byb3ZpZGVyJyxcbiAgICAnc3VwcHJlc3NFeGNlcHRpb25zJyxcbiAgICAndmVyaWZpY2F0aW9uRmFsbGJhY2snLFxuXTtcbi8qKlxuICogSW50ZXJmYWNlIHVzZWQgdG8gcmV0dXJuIGVycm9ycyBpbiBTaXdlUmVzcG9uc2VzLlxuICovXG5jbGFzcyBTaXdlRXJyb3Ige1xuICAgIGNvbnN0cnVjdG9yKHR5cGUsIGV4cGVjdGVkLCByZWNlaXZlZCkge1xuICAgICAgICB0aGlzLnR5cGUgPSB0eXBlO1xuICAgICAgICB0aGlzLmV4cGVjdGVkID0gZXhwZWN0ZWQ7XG4gICAgICAgIHRoaXMucmVjZWl2ZWQgPSByZWNlaXZlZDtcbiAgICB9XG59XG5leHBvcnRzLlNpd2VFcnJvciA9IFNpd2VFcnJvcjtcbi8qKlxuICogUG9zc2libGUgbWVzc2FnZSBlcnJvciB0eXBlcy5cbiAqL1xudmFyIFNpd2VFcnJvclR5cGU7XG4oZnVuY3Rpb24gKFNpd2VFcnJvclR5cGUpIHtcbiAgICAvKiogYGV4cGlyYXRpb25UaW1lYCBpcyBwcmVzZW50IGFuZCBpbiB0aGUgcGFzdC4gKi9cbiAgICBTaXdlRXJyb3JUeXBlW1wiRVhQSVJFRF9NRVNTQUdFXCJdID0gXCJFeHBpcmVkIG1lc3NhZ2UuXCI7XG4gICAgLyoqIGBkb21haW5gIGlzIG5vdCBhIHZhbGlkIGF1dGhvcml0eSBvciBpcyBlbXB0eS4gKi9cbiAgICBTaXdlRXJyb3JUeXBlW1wiSU5WQUxJRF9ET01BSU5cIl0gPSBcIkludmFsaWQgZG9tYWluLlwiO1xuICAgIC8qKiBgZG9tYWluYCBkb24ndCBtYXRjaCB0aGUgZG9tYWluIHByb3ZpZGVkIGZvciB2ZXJpZmljYXRpb24uICovXG4gICAgU2l3ZUVycm9yVHlwZVtcIkRPTUFJTl9NSVNNQVRDSFwiXSA9IFwiRG9tYWluIGRvZXMgbm90IG1hdGNoIHByb3ZpZGVkIGRvbWFpbiBmb3IgdmVyaWZpY2F0aW9uLlwiO1xuICAgIC8qKiBgbm9uY2VgIGRvbid0IG1hdGNoIHRoZSBub25jZSBwcm92aWRlZCBmb3IgdmVyaWZpY2F0aW9uLiAqL1xuICAgIFNpd2VFcnJvclR5cGVbXCJOT05DRV9NSVNNQVRDSFwiXSA9IFwiTm9uY2UgZG9lcyBub3QgbWF0Y2ggcHJvdmlkZWQgbm9uY2UgZm9yIHZlcmlmaWNhdGlvbi5cIjtcbiAgICAvKiogYGFkZHJlc3NgIGRvZXMgbm90IGNvbmZvcm0gdG8gRUlQLTU1IG9yIGlzIG5vdCBhIHZhbGlkIGFkZHJlc3MuICovXG4gICAgU2l3ZUVycm9yVHlwZVtcIklOVkFMSURfQUREUkVTU1wiXSA9IFwiSW52YWxpZCBhZGRyZXNzLlwiO1xuICAgIC8qKiBgdXJpYCBkb2VzIG5vdCBjb25mb3JtIHRvIFJGQyAzOTg2LiAqL1xuICAgIFNpd2VFcnJvclR5cGVbXCJJTlZBTElEX1VSSVwiXSA9IFwiVVJJIGRvZXMgbm90IGNvbmZvcm0gdG8gUkZDIDM5ODYuXCI7XG4gICAgLyoqIGBub25jZWAgaXMgc21hbGxlciB0aGVuIDggY2hhcmFjdGVycyBvciBpcyBub3QgYWxwaGFudW1lcmljICovXG4gICAgU2l3ZUVycm9yVHlwZVtcIklOVkFMSURfTk9OQ0VcIl0gPSBcIk5vbmNlIHNpemUgc21hbGxlciB0aGVuIDggY2hhcmFjdGVycyBvciBpcyBub3QgYWxwaGFudW1lcmljLlwiO1xuICAgIC8qKiBgbm90QmVmb3JlYCBpcyBwcmVzZW50IGFuZCBpbiB0aGUgZnV0dXJlLiAqL1xuICAgIFNpd2VFcnJvclR5cGVbXCJOT1RfWUVUX1ZBTElEX01FU1NBR0VcIl0gPSBcIk1lc3NhZ2UgaXMgbm90IHZhbGlkIHlldC5cIjtcbiAgICAvKiogU2lnbmF0dXJlIGRvZXNuJ3QgbWF0Y2ggdGhlIGFkZHJlc3Mgb2YgdGhlIG1lc3NhZ2UuICovXG4gICAgU2l3ZUVycm9yVHlwZVtcIklOVkFMSURfU0lHTkFUVVJFXCJdID0gXCJTaWduYXR1cmUgZG9lcyBub3QgbWF0Y2ggYWRkcmVzcyBvZiB0aGUgbWVzc2FnZS5cIjtcbiAgICAvKiogYGV4cGlyYXRpb25UaW1lYCwgYG5vdEJlZm9yZWAgb3IgYGlzc3VlZEF0YCBub3QgY29tcGxpZW50IHRvIElTTy04NjAxLiAqL1xuICAgIFNpd2VFcnJvclR5cGVbXCJJTlZBTElEX1RJTUVfRk9STUFUXCJdID0gXCJJbnZhbGlkIHRpbWUgZm9ybWF0LlwiO1xuICAgIC8qKiBgdmVyc2lvbmAgaXMgbm90IDEuICovXG4gICAgU2l3ZUVycm9yVHlwZVtcIklOVkFMSURfTUVTU0FHRV9WRVJTSU9OXCJdID0gXCJJbnZhbGlkIG1lc3NhZ2UgdmVyc2lvbi5cIjtcbiAgICAvKiogVGhyb3duIHdoZW4gc29tZSByZXF1aXJlZCBmaWVsZCBpcyBtaXNzaW5nLiAqL1xuICAgIFNpd2VFcnJvclR5cGVbXCJVTkFCTEVfVE9fUEFSU0VcIl0gPSBcIlVuYWJsZSB0byBwYXJzZSB0aGUgbWVzc2FnZS5cIjtcbn0pKFNpd2VFcnJvclR5cGUgPSBleHBvcnRzLlNpd2VFcnJvclR5cGUgfHwgKGV4cG9ydHMuU2l3ZUVycm9yVHlwZSA9IHt9KSk7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/../../node_modules/.pnpm/siwe@2.1.4_ethers@5.7.0/node_modules/siwe/dist/types.js\n");

/***/ }),

/***/ "(ssr)/../../node_modules/.pnpm/siwe@2.1.4_ethers@5.7.0/node_modules/siwe/dist/utils.js":
/*!****************************************************************************************!*\
  !*** ../../node_modules/.pnpm/siwe@2.1.4_ethers@5.7.0/node_modules/siwe/dist/utils.js ***!
  \****************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.checkInvalidKeys = exports.isValidISO8601Date = exports.generateNonce = exports.checkContractWalletSignature = void 0;\nconst random_1 = __webpack_require__(/*! @stablelib/random */ \"(ssr)/../../node_modules/.pnpm/@stablelib+random@1.0.2/node_modules/@stablelib/random/lib/random.js\");\nconst ethers_1 = __webpack_require__(/*! ethers */ \"(ssr)/../../node_modules/.pnpm/ethers@5.7.0_bufferutil@4.0.7/node_modules/ethers/lib/index.js\");\nconst ethersCompat_1 = __webpack_require__(/*! ./ethersCompat */ \"(ssr)/../../node_modules/.pnpm/siwe@2.1.4_ethers@5.7.0/node_modules/siwe/dist/ethersCompat.js\");\nconst EIP1271_ABI = [\"function isValidSignature(bytes32 _message, bytes _signature) public view returns (bytes4)\"];\nconst EIP1271_MAGICVALUE = \"0x1626ba7e\";\nconst ISO8601 = /^(?<date>[0-9]{4}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01]))[Tt]([01][0-9]|2[0-3]):([0-5][0-9]):([0-5][0-9]|60)(.[0-9]+)?(([Zz])|([+|-]([01][0-9]|2[0-3]):[0-5][0-9]))$/;\n/**\n * This method calls the EIP-1271 method for Smart Contract wallets\n * @param message The EIP-4361 parsed message\n * @param provider Web3 provider able to perform a contract check (Web3/EthersJS).\n * @returns {Promise<boolean>} Checks for the smart contract (if it exists) if\n * the signature is valid for given address.\n */\nconst checkContractWalletSignature = (message, signature, provider) => __awaiter(void 0, void 0, void 0, function* () {\n    if (!provider) {\n        return false;\n    }\n    const walletContract = new ethers_1.Contract(message.address, EIP1271_ABI, provider);\n    const hashedMessage = (0, ethersCompat_1.hashMessage)(message.prepareMessage());\n    const res = yield walletContract.isValidSignature(hashedMessage, signature);\n    return res == EIP1271_MAGICVALUE;\n});\nexports.checkContractWalletSignature = checkContractWalletSignature;\n/**\n * This method leverages a native CSPRNG with support for both browser and Node.js\n * environments in order generate a cryptographically secure nonce for use in the\n * SiweMessage in order to prevent replay attacks.\n *\n * 96 bits has been chosen as a number to sufficiently balance size and security considerations\n * relative to the lifespan of it's usage.\n *\n * @returns cryptographically generated random nonce with 96 bits of entropy encoded with\n * an alphanumeric character set.\n */\nconst generateNonce = () => {\n    const nonce = (0, random_1.randomStringForEntropy)(96);\n    if (!nonce || nonce.length < 8) {\n        throw new Error('Error during nonce creation.');\n    }\n    return nonce;\n};\nexports.generateNonce = generateNonce;\n/**\n * This method matches the given date string against the ISO-8601 regex and also\n * performs checks if it's a valid date.\n * @param inputDate any string to be validated against ISO-8601\n * @returns boolean indicating if the providade date is valid and conformant to ISO-8601\n */\nconst isValidISO8601Date = (inputDate) => {\n    /* Split groups and make sure inputDate is in ISO8601 format */\n    const inputMatch = ISO8601.exec(inputDate);\n    /* if inputMatch is null the date is not ISO-8601 */\n    if (!inputDate) {\n        return false;\n    }\n    /* Creates a date object with input date to parse for invalid days e.g. Feb, 30 -> Mar, 01 */\n    const inputDateParsed = new Date(inputMatch.groups.date).toISOString();\n    /* Get groups from new parsed date to compare with the original input */\n    const parsedInputMatch = ISO8601.exec(inputDateParsed);\n    /* Compare remaining fields */\n    return inputMatch.groups.date === parsedInputMatch.groups.date;\n};\nexports.isValidISO8601Date = isValidISO8601Date;\nconst checkInvalidKeys = (obj, keys) => {\n    const invalidKeys = [];\n    Object.keys(obj).forEach(key => {\n        if (!keys.includes(key)) {\n            invalidKeys.push(key);\n        }\n    });\n    return invalidKeys;\n};\nexports.checkInvalidKeys = checkInvalidKeys;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vLi4vbm9kZV9tb2R1bGVzLy5wbnBtL3Npd2VAMi4xLjRfZXRoZXJzQDUuNy4wL25vZGVfbW9kdWxlcy9zaXdlL2Rpc3QvdXRpbHMuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYjtBQUNBLDRCQUE0QiwrREFBK0QsaUJBQWlCO0FBQzVHO0FBQ0Esb0NBQW9DLE1BQU0sK0JBQStCLFlBQVk7QUFDckYsbUNBQW1DLE1BQU0sbUNBQW1DLFlBQVk7QUFDeEYsZ0NBQWdDO0FBQ2hDO0FBQ0EsS0FBSztBQUNMO0FBQ0EsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELHdCQUF3QixHQUFHLDBCQUEwQixHQUFHLHFCQUFxQixHQUFHLG9DQUFvQztBQUNwSCxpQkFBaUIsbUJBQU8sQ0FBQyw4SEFBbUI7QUFDNUMsaUJBQWlCLG1CQUFPLENBQUMsNkdBQVE7QUFDakMsdUJBQXVCLG1CQUFPLENBQUMscUhBQWdCO0FBQy9DO0FBQ0E7QUFDQSxnQ0FBZ0MsRUFBRTtBQUNsQztBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWEsa0JBQWtCO0FBQy9CO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQztBQUNELG9DQUFvQztBQUNwQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxxQkFBcUI7QUFDckI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDBCQUEwQjtBQUMxQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBLHdCQUF3QiIsInNvdXJjZXMiOlsid2VicGFjazovL0B0b2tlbnN0cmVhbS93ZWIvLi4vLi4vbm9kZV9tb2R1bGVzLy5wbnBtL3Npd2VAMi4xLjRfZXRoZXJzQDUuNy4wL25vZGVfbW9kdWxlcy9zaXdlL2Rpc3QvdXRpbHMuanM/OGI1YiJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbnZhciBfX2F3YWl0ZXIgPSAodGhpcyAmJiB0aGlzLl9fYXdhaXRlcikgfHwgZnVuY3Rpb24gKHRoaXNBcmcsIF9hcmd1bWVudHMsIFAsIGdlbmVyYXRvcikge1xuICAgIGZ1bmN0aW9uIGFkb3B0KHZhbHVlKSB7IHJldHVybiB2YWx1ZSBpbnN0YW5jZW9mIFAgPyB2YWx1ZSA6IG5ldyBQKGZ1bmN0aW9uIChyZXNvbHZlKSB7IHJlc29sdmUodmFsdWUpOyB9KTsgfVxuICAgIHJldHVybiBuZXcgKFAgfHwgKFAgPSBQcm9taXNlKSkoZnVuY3Rpb24gKHJlc29sdmUsIHJlamVjdCkge1xuICAgICAgICBmdW5jdGlvbiBmdWxmaWxsZWQodmFsdWUpIHsgdHJ5IHsgc3RlcChnZW5lcmF0b3IubmV4dCh2YWx1ZSkpOyB9IGNhdGNoIChlKSB7IHJlamVjdChlKTsgfSB9XG4gICAgICAgIGZ1bmN0aW9uIHJlamVjdGVkKHZhbHVlKSB7IHRyeSB7IHN0ZXAoZ2VuZXJhdG9yW1widGhyb3dcIl0odmFsdWUpKTsgfSBjYXRjaCAoZSkgeyByZWplY3QoZSk7IH0gfVxuICAgICAgICBmdW5jdGlvbiBzdGVwKHJlc3VsdCkgeyByZXN1bHQuZG9uZSA/IHJlc29sdmUocmVzdWx0LnZhbHVlKSA6IGFkb3B0KHJlc3VsdC52YWx1ZSkudGhlbihmdWxmaWxsZWQsIHJlamVjdGVkKTsgfVxuICAgICAgICBzdGVwKChnZW5lcmF0b3IgPSBnZW5lcmF0b3IuYXBwbHkodGhpc0FyZywgX2FyZ3VtZW50cyB8fCBbXSkpLm5leHQoKSk7XG4gICAgfSk7XG59O1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5jaGVja0ludmFsaWRLZXlzID0gZXhwb3J0cy5pc1ZhbGlkSVNPODYwMURhdGUgPSBleHBvcnRzLmdlbmVyYXRlTm9uY2UgPSBleHBvcnRzLmNoZWNrQ29udHJhY3RXYWxsZXRTaWduYXR1cmUgPSB2b2lkIDA7XG5jb25zdCByYW5kb21fMSA9IHJlcXVpcmUoXCJAc3RhYmxlbGliL3JhbmRvbVwiKTtcbmNvbnN0IGV0aGVyc18xID0gcmVxdWlyZShcImV0aGVyc1wiKTtcbmNvbnN0IGV0aGVyc0NvbXBhdF8xID0gcmVxdWlyZShcIi4vZXRoZXJzQ29tcGF0XCIpO1xuY29uc3QgRUlQMTI3MV9BQkkgPSBbXCJmdW5jdGlvbiBpc1ZhbGlkU2lnbmF0dXJlKGJ5dGVzMzIgX21lc3NhZ2UsIGJ5dGVzIF9zaWduYXR1cmUpIHB1YmxpYyB2aWV3IHJldHVybnMgKGJ5dGVzNClcIl07XG5jb25zdCBFSVAxMjcxX01BR0lDVkFMVUUgPSBcIjB4MTYyNmJhN2VcIjtcbmNvbnN0IElTTzg2MDEgPSAvXig/PGRhdGU+WzAtOV17NH0tKDBbMS05XXwxWzAxMl0pLSgwWzEtOV18WzEyXVswLTldfDNbMDFdKSlbVHRdKFswMV1bMC05XXwyWzAtM10pOihbMC01XVswLTldKTooWzAtNV1bMC05XXw2MCkoLlswLTldKyk/KChbWnpdKXwoWyt8LV0oWzAxXVswLTldfDJbMC0zXSk6WzAtNV1bMC05XSkpJC87XG4vKipcbiAqIFRoaXMgbWV0aG9kIGNhbGxzIHRoZSBFSVAtMTI3MSBtZXRob2QgZm9yIFNtYXJ0IENvbnRyYWN0IHdhbGxldHNcbiAqIEBwYXJhbSBtZXNzYWdlIFRoZSBFSVAtNDM2MSBwYXJzZWQgbWVzc2FnZVxuICogQHBhcmFtIHByb3ZpZGVyIFdlYjMgcHJvdmlkZXIgYWJsZSB0byBwZXJmb3JtIGEgY29udHJhY3QgY2hlY2sgKFdlYjMvRXRoZXJzSlMpLlxuICogQHJldHVybnMge1Byb21pc2U8Ym9vbGVhbj59IENoZWNrcyBmb3IgdGhlIHNtYXJ0IGNvbnRyYWN0IChpZiBpdCBleGlzdHMpIGlmXG4gKiB0aGUgc2lnbmF0dXJlIGlzIHZhbGlkIGZvciBnaXZlbiBhZGRyZXNzLlxuICovXG5jb25zdCBjaGVja0NvbnRyYWN0V2FsbGV0U2lnbmF0dXJlID0gKG1lc3NhZ2UsIHNpZ25hdHVyZSwgcHJvdmlkZXIpID0+IF9fYXdhaXRlcih2b2lkIDAsIHZvaWQgMCwgdm9pZCAwLCBmdW5jdGlvbiogKCkge1xuICAgIGlmICghcHJvdmlkZXIpIHtcbiAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIH1cbiAgICBjb25zdCB3YWxsZXRDb250cmFjdCA9IG5ldyBldGhlcnNfMS5Db250cmFjdChtZXNzYWdlLmFkZHJlc3MsIEVJUDEyNzFfQUJJLCBwcm92aWRlcik7XG4gICAgY29uc3QgaGFzaGVkTWVzc2FnZSA9ICgwLCBldGhlcnNDb21wYXRfMS5oYXNoTWVzc2FnZSkobWVzc2FnZS5wcmVwYXJlTWVzc2FnZSgpKTtcbiAgICBjb25zdCByZXMgPSB5aWVsZCB3YWxsZXRDb250cmFjdC5pc1ZhbGlkU2lnbmF0dXJlKGhhc2hlZE1lc3NhZ2UsIHNpZ25hdHVyZSk7XG4gICAgcmV0dXJuIHJlcyA9PSBFSVAxMjcxX01BR0lDVkFMVUU7XG59KTtcbmV4cG9ydHMuY2hlY2tDb250cmFjdFdhbGxldFNpZ25hdHVyZSA9IGNoZWNrQ29udHJhY3RXYWxsZXRTaWduYXR1cmU7XG4vKipcbiAqIFRoaXMgbWV0aG9kIGxldmVyYWdlcyBhIG5hdGl2ZSBDU1BSTkcgd2l0aCBzdXBwb3J0IGZvciBib3RoIGJyb3dzZXIgYW5kIE5vZGUuanNcbiAqIGVudmlyb25tZW50cyBpbiBvcmRlciBnZW5lcmF0ZSBhIGNyeXB0b2dyYXBoaWNhbGx5IHNlY3VyZSBub25jZSBmb3IgdXNlIGluIHRoZVxuICogU2l3ZU1lc3NhZ2UgaW4gb3JkZXIgdG8gcHJldmVudCByZXBsYXkgYXR0YWNrcy5cbiAqXG4gKiA5NiBiaXRzIGhhcyBiZWVuIGNob3NlbiBhcyBhIG51bWJlciB0byBzdWZmaWNpZW50bHkgYmFsYW5jZSBzaXplIGFuZCBzZWN1cml0eSBjb25zaWRlcmF0aW9uc1xuICogcmVsYXRpdmUgdG8gdGhlIGxpZmVzcGFuIG9mIGl0J3MgdXNhZ2UuXG4gKlxuICogQHJldHVybnMgY3J5cHRvZ3JhcGhpY2FsbHkgZ2VuZXJhdGVkIHJhbmRvbSBub25jZSB3aXRoIDk2IGJpdHMgb2YgZW50cm9weSBlbmNvZGVkIHdpdGhcbiAqIGFuIGFscGhhbnVtZXJpYyBjaGFyYWN0ZXIgc2V0LlxuICovXG5jb25zdCBnZW5lcmF0ZU5vbmNlID0gKCkgPT4ge1xuICAgIGNvbnN0IG5vbmNlID0gKDAsIHJhbmRvbV8xLnJhbmRvbVN0cmluZ0ZvckVudHJvcHkpKDk2KTtcbiAgICBpZiAoIW5vbmNlIHx8IG5vbmNlLmxlbmd0aCA8IDgpIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKCdFcnJvciBkdXJpbmcgbm9uY2UgY3JlYXRpb24uJyk7XG4gICAgfVxuICAgIHJldHVybiBub25jZTtcbn07XG5leHBvcnRzLmdlbmVyYXRlTm9uY2UgPSBnZW5lcmF0ZU5vbmNlO1xuLyoqXG4gKiBUaGlzIG1ldGhvZCBtYXRjaGVzIHRoZSBnaXZlbiBkYXRlIHN0cmluZyBhZ2FpbnN0IHRoZSBJU08tODYwMSByZWdleCBhbmQgYWxzb1xuICogcGVyZm9ybXMgY2hlY2tzIGlmIGl0J3MgYSB2YWxpZCBkYXRlLlxuICogQHBhcmFtIGlucHV0RGF0ZSBhbnkgc3RyaW5nIHRvIGJlIHZhbGlkYXRlZCBhZ2FpbnN0IElTTy04NjAxXG4gKiBAcmV0dXJucyBib29sZWFuIGluZGljYXRpbmcgaWYgdGhlIHByb3ZpZGFkZSBkYXRlIGlzIHZhbGlkIGFuZCBjb25mb3JtYW50IHRvIElTTy04NjAxXG4gKi9cbmNvbnN0IGlzVmFsaWRJU084NjAxRGF0ZSA9IChpbnB1dERhdGUpID0+IHtcbiAgICAvKiBTcGxpdCBncm91cHMgYW5kIG1ha2Ugc3VyZSBpbnB1dERhdGUgaXMgaW4gSVNPODYwMSBmb3JtYXQgKi9cbiAgICBjb25zdCBpbnB1dE1hdGNoID0gSVNPODYwMS5leGVjKGlucHV0RGF0ZSk7XG4gICAgLyogaWYgaW5wdXRNYXRjaCBpcyBudWxsIHRoZSBkYXRlIGlzIG5vdCBJU08tODYwMSAqL1xuICAgIGlmICghaW5wdXREYXRlKSB7XG4gICAgICAgIHJldHVybiBmYWxzZTtcbiAgICB9XG4gICAgLyogQ3JlYXRlcyBhIGRhdGUgb2JqZWN0IHdpdGggaW5wdXQgZGF0ZSB0byBwYXJzZSBmb3IgaW52YWxpZCBkYXlzIGUuZy4gRmViLCAzMCAtPiBNYXIsIDAxICovXG4gICAgY29uc3QgaW5wdXREYXRlUGFyc2VkID0gbmV3IERhdGUoaW5wdXRNYXRjaC5ncm91cHMuZGF0ZSkudG9JU09TdHJpbmcoKTtcbiAgICAvKiBHZXQgZ3JvdXBzIGZyb20gbmV3IHBhcnNlZCBkYXRlIHRvIGNvbXBhcmUgd2l0aCB0aGUgb3JpZ2luYWwgaW5wdXQgKi9cbiAgICBjb25zdCBwYXJzZWRJbnB1dE1hdGNoID0gSVNPODYwMS5leGVjKGlucHV0RGF0ZVBhcnNlZCk7XG4gICAgLyogQ29tcGFyZSByZW1haW5pbmcgZmllbGRzICovXG4gICAgcmV0dXJuIGlucHV0TWF0Y2guZ3JvdXBzLmRhdGUgPT09IHBhcnNlZElucHV0TWF0Y2guZ3JvdXBzLmRhdGU7XG59O1xuZXhwb3J0cy5pc1ZhbGlkSVNPODYwMURhdGUgPSBpc1ZhbGlkSVNPODYwMURhdGU7XG5jb25zdCBjaGVja0ludmFsaWRLZXlzID0gKG9iaiwga2V5cykgPT4ge1xuICAgIGNvbnN0IGludmFsaWRLZXlzID0gW107XG4gICAgT2JqZWN0LmtleXMob2JqKS5mb3JFYWNoKGtleSA9PiB7XG4gICAgICAgIGlmICgha2V5cy5pbmNsdWRlcyhrZXkpKSB7XG4gICAgICAgICAgICBpbnZhbGlkS2V5cy5wdXNoKGtleSk7XG4gICAgICAgIH1cbiAgICB9KTtcbiAgICByZXR1cm4gaW52YWxpZEtleXM7XG59O1xuZXhwb3J0cy5jaGVja0ludmFsaWRLZXlzID0gY2hlY2tJbnZhbGlkS2V5cztcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/../../node_modules/.pnpm/siwe@2.1.4_ethers@5.7.0/node_modules/siwe/dist/utils.js\n");

/***/ })

};
;