"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/@libsql+isomorphic-fetch@0.1.10";
exports.ids = ["vendor-chunks/@libsql+isomorphic-fetch@0.1.10"];
exports.modules = {

/***/ "(rsc)/../../node_modules/.pnpm/@libsql+isomorphic-fetch@0.1.10/node_modules/@libsql/isomorphic-fetch/node.js":
/*!**************************************************************************************************************!*\
  !*** ../../node_modules/.pnpm/@libsql+isomorphic-fetch@0.1.10/node_modules/@libsql/isomorphic-fetch/node.js ***!
  \**************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Headers: () => (/* reexport safe */ node_fetch__WEBPACK_IMPORTED_MODULE_0__.Headers),\n/* harmony export */   Request: () => (/* reexport safe */ node_fetch__WEBPACK_IMPORTED_MODULE_0__.Request),\n/* harmony export */   fetch: () => (/* binding */ fetch)\n/* harmony export */ });\n/* harmony import */ var node_fetch__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! node-fetch */ \"(rsc)/../../node_modules/.pnpm/node-fetch@2.7.0_encoding@0.1.13/node_modules/node-fetch/lib/index.mjs\");\n/* harmony import */ var node_http__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! node:http */ \"node:http\");\n/* harmony import */ var node_https__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! node:https */ \"node:https\");\n/* harmony import */ var node_stream__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! node:stream */ \"node:stream\");\n\n\n\n\n// workaround this bug: https://github.com/node-fetch/node-fetch/issues/1735\nconst httpAgent = new node_http__WEBPACK_IMPORTED_MODULE_1__.Agent({\n    keepAlive: true\n});\nconst httpsAgent = new node_https__WEBPACK_IMPORTED_MODULE_2__.Agent({\n    keepAlive: true\n});\nfunction agentSelector(parsedUrl) {\n    if (parsedUrl.protocol === \"https:\") {\n        return httpsAgent;\n    } else {\n        return httpAgent;\n    }\n}\n// node-fetch returns a Node stream in the `Response.body` property, but the Fetch API should return a WhatWG\n// stream. this is a shim that emulates the WhatWG stream API which is used by `@libsql/hrana-client`\nclass WebReadableStream {\n    #nodeStream;\n    #ended;\n    #error;\n    #readRequests;\n    constructor(nodeStream){\n        this.#nodeStream = nodeStream;\n        this.#ended = false;\n        this.#error = undefined;\n        this.#readRequests = [];\n    }\n    getReader() {\n        this.#nodeStream.on(\"end\", ()=>{\n            this.#ended = true;\n            while(this.#readRequests.length > 0){\n                this.#readRequests.shift().callback({\n                    value: undefined,\n                    done: true\n                });\n            }\n        });\n        this.#nodeStream.on(\"error\", (error)=>{\n            this.#error = error;\n            while(this.#readRequests.length > 0){\n                this.#readRequests.shift().errback(error);\n            }\n        });\n        this.#nodeStream.on(\"readable\", ()=>{\n            while(this.#readRequests.length > 0){\n                const chunk = this.#nodeStream.read();\n                if (chunk === null) {\n                    break;\n                }\n                this.#readRequests.shift().callback({\n                    value: chunk,\n                    done: false\n                });\n            }\n        });\n        return this;\n    }\n    read() {\n        return new Promise((callback, errback)=>{\n            if (this.#error !== undefined) {\n                errback(this.#error);\n            } else if (this.#ended) {\n                callback({\n                    value: undefined,\n                    done: true\n                });\n            } else {\n                const chunk = this.#nodeStream.read();\n                if (chunk === null) {\n                    this.#readRequests.push({\n                        callback,\n                        errback\n                    });\n                } else {\n                    callback({\n                        value: chunk,\n                        done: false\n                    });\n                }\n            }\n        });\n    }\n    cancel() {\n        this.#nodeStream.destroy();\n        return Promise.resolve(undefined);\n    }\n}\n// unfortunately, Node 16.x does not expose `stream.Readable.toWeb`, even though it implements the adapter\n// inside `lib/internal/webstreams/adapters.js`\nlet streamReadableToWeb = node_stream__WEBPACK_IMPORTED_MODULE_3__.Readable.toWeb ?? ((nodeStream)=>new WebReadableStream(nodeStream));\nclass Response {\n    #nodeResponse;\n    constructor(nodeResponse){\n        this.#nodeResponse = nodeResponse;\n        this.body = streamReadableToWeb(nodeResponse.body);\n    }\n    arrayBuffer() {\n        return this.#nodeResponse.arrayBuffer();\n    }\n    blob() {\n        return this.#nodeResponse.blob();\n    }\n    json() {\n        return this.#nodeResponse.json();\n    }\n    text() {\n        return this.#nodeResponse.text();\n    }\n    get headers() {\n        return this.#nodeResponse.headers;\n    }\n    get ok() {\n        return this.#nodeResponse.ok;\n    }\n    get status() {\n        return this.#nodeResponse.status;\n    }\n}\nfunction fetch(resource, options = {}) {\n    return (0,node_fetch__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(resource, {\n        agent: agentSelector,\n        ...options\n    }).then((nodeResponse)=>new Response(nodeResponse));\n}\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/../../node_modules/.pnpm/@libsql+isomorphic-fetch@0.1.10/node_modules/@libsql/isomorphic-fetch/node.js\n");

/***/ })

};
;