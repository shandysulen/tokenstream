"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/@walletconnect+sign-client@2.11.1_@upstash+redis@1.25.1_bufferutil@4.0.7_encoding@0.1.13";
exports.ids = ["vendor-chunks/@walletconnect+sign-client@2.11.1_@upstash+redis@1.25.1_bufferutil@4.0.7_encoding@0.1.13"];
exports.modules = {

/***/ "(ssr)/../../node_modules/.pnpm/@walletconnect+sign-client@2.11.1_@upstash+redis@1.25.1_bufferutil@4.0.7_encoding@0.1.13/node_modules/@walletconnect/sign-client/dist/index.cjs.js":
/*!***********************************************************************************************************************************************************************************!*\
  !*** ../../node_modules/.pnpm/@walletconnect+sign-client@2.11.1_@upstash+redis@1.25.1_bufferutil@4.0.7_encoding@0.1.13/node_modules/@walletconnect/sign-client/dist/index.cjs.js ***!
  \***********************************************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("Object.defineProperty(exports, \"__esModule\", ({value:!0}));var S=__webpack_require__(/*! @walletconnect/core */ \"(ssr)/../../node_modules/.pnpm/@walletconnect+core@2.11.1_@upstash+redis@1.25.1_bufferutil@4.0.7_encoding@0.1.13/node_modules/@walletconnect/core/dist/index.cjs.js\"),O=__webpack_require__(/*! @walletconnect/logger */ \"(ssr)/../../node_modules/.pnpm/@walletconnect+logger@2.0.1/node_modules/@walletconnect/logger/dist/cjs/index.js\"),$=__webpack_require__(/*! @walletconnect/types */ \"(ssr)/../../node_modules/.pnpm/@walletconnect+types@2.11.1_@upstash+redis@1.25.1/node_modules/@walletconnect/types/dist/index.cjs.js\"),i=__webpack_require__(/*! @walletconnect/utils */ \"(ssr)/../../node_modules/.pnpm/@walletconnect+utils@2.11.1_@upstash+redis@1.25.1/node_modules/@walletconnect/utils/dist/index.cjs.js\"),k=__webpack_require__(/*! events */ \"events\"),h=__webpack_require__(/*! @walletconnect/time */ \"(ssr)/../../node_modules/.pnpm/@walletconnect+time@1.0.2/node_modules/@walletconnect/time/dist/cjs/index.js\"),g=__webpack_require__(/*! @walletconnect/jsonrpc-utils */ \"(ssr)/../../node_modules/.pnpm/@walletconnect+jsonrpc-utils@1.0.8/node_modules/@walletconnect/jsonrpc-utils/dist/cjs/index.js\");function B(E){return E&&typeof E==\"object\"&&\"default\"in E?E:{default:E}}var Z=B(k);const A=\"wc\",L=2,b=\"client\",T=`${A}@${L}:${b}:`,V={name:b,logger:\"error\",controller:!1,relayUrl:\"wss://relay.walletconnect.com\"},ee={session_proposal:\"session_proposal\",session_update:\"session_update\",session_extend:\"session_extend\",session_ping:\"session_ping\",session_delete:\"session_delete\",session_expire:\"session_expire\",session_request:\"session_request\",session_request_sent:\"session_request_sent\",session_event:\"session_event\",proposal_expire:\"proposal_expire\",session_request_expire:\"session_request_expire\"},se={database:\":memory:\"},M=\"WALLETCONNECT_DEEPLINK_CHOICE\",te={created:\"history_created\",updated:\"history_updated\",deleted:\"history_deleted\",sync:\"history_sync\"},ie=\"history\",re=\"0.3\",Y=\"proposal\",ne=h.THIRTY_DAYS,Q=\"Proposal expired\",J=\"session\",v=h.SEVEN_DAYS,K=\"engine\",I={wc_sessionPropose:{req:{ttl:h.FIVE_MINUTES,prompt:!0,tag:1100},res:{ttl:h.FIVE_MINUTES,prompt:!1,tag:1101}},wc_sessionSettle:{req:{ttl:h.FIVE_MINUTES,prompt:!1,tag:1102},res:{ttl:h.FIVE_MINUTES,prompt:!1,tag:1103}},wc_sessionUpdate:{req:{ttl:h.ONE_DAY,prompt:!1,tag:1104},res:{ttl:h.ONE_DAY,prompt:!1,tag:1105}},wc_sessionExtend:{req:{ttl:h.ONE_DAY,prompt:!1,tag:1106},res:{ttl:h.ONE_DAY,prompt:!1,tag:1107}},wc_sessionRequest:{req:{ttl:h.FIVE_MINUTES,prompt:!0,tag:1108},res:{ttl:h.FIVE_MINUTES,prompt:!1,tag:1109}},wc_sessionEvent:{req:{ttl:h.FIVE_MINUTES,prompt:!0,tag:1110},res:{ttl:h.FIVE_MINUTES,prompt:!1,tag:1111}},wc_sessionDelete:{req:{ttl:h.ONE_DAY,prompt:!1,tag:1112},res:{ttl:h.ONE_DAY,prompt:!1,tag:1113}},wc_sessionPing:{req:{ttl:h.THIRTY_SECONDS,prompt:!1,tag:1114},res:{ttl:h.THIRTY_SECONDS,prompt:!1,tag:1115}}},D={min:h.FIVE_MINUTES,max:h.SEVEN_DAYS},y={idle:\"IDLE\",active:\"ACTIVE\"},F=\"request\",X=[\"wc_sessionPropose\",\"wc_sessionRequest\",\"wc_authRequest\"];var oe=Object.defineProperty,ae=Object.defineProperties,ce=Object.getOwnPropertyDescriptors,j=Object.getOwnPropertySymbols,le=Object.prototype.hasOwnProperty,pe=Object.prototype.propertyIsEnumerable,z=(E,n,e)=>n in E?oe(E,n,{enumerable:!0,configurable:!0,writable:!0,value:e}):E[n]=e,m=(E,n)=>{for(var e in n||(n={}))le.call(n,e)&&z(E,e,n[e]);if(j)for(var e of j(n))pe.call(n,e)&&z(E,e,n[e]);return E},f=(E,n)=>ae(E,ce(n));class he extends $.IEngine{constructor(n){super(n),this.name=K,this.events=new Z.default,this.initialized=!1,this.ignoredPayloadTypes=[i.TYPE_1],this.requestQueue={state:y.idle,queue:[]},this.sessionRequestQueue={state:y.idle,queue:[]},this.requestQueueDelay=h.ONE_SECOND,this.init=async()=>{this.initialized||(await this.cleanup(),this.registerRelayerEvents(),this.registerExpirerEvents(),this.registerPairingEvents(),this.client.core.pairing.register({methods:Object.keys(I)}),this.initialized=!0,setTimeout(()=>{this.sessionRequestQueue.queue=this.getPendingSessionRequests(),this.processSessionRequestQueue()},h.toMiliseconds(this.requestQueueDelay)))},this.connect=async e=>{await this.isInitialized();const s=f(m({},e),{requiredNamespaces:e.requiredNamespaces||{},optionalNamespaces:e.optionalNamespaces||{}});await this.isValidConnect(s);const{pairingTopic:t,requiredNamespaces:r,optionalNamespaces:o,sessionProperties:a,relays:c}=s;let l=t,p,u=!1;if(l&&(u=this.client.core.pairing.pairings.get(l).active),!l||!u){const{topic:P,uri:_}=await this.client.core.pairing.create();l=P,p=_}const d=await this.client.core.crypto.generateKeyPair(),R=I.wc_sessionPropose.req.ttl||h.FIVE_MINUTES,w=i.calcExpiry(R),N=m({requiredNamespaces:r,optionalNamespaces:o,relays:c??[{protocol:S.RELAYER_DEFAULT_PROTOCOL}],proposer:{publicKey:d,metadata:this.client.metadata},expiryTimestamp:w},a&&{sessionProperties:a}),{reject:C,resolve:q,done:W}=i.createDelayedPromise(R,Q);if(this.events.once(i.engineEvent(\"session_connect\"),async({error:P,session:_})=>{if(P)C(P);else if(_){_.self.publicKey=d;const U=f(m({},_),{requiredNamespaces:N.requiredNamespaces,optionalNamespaces:N.optionalNamespaces});await this.client.session.set(_.topic,U),await this.setExpiry(_.topic,_.expiry),l&&await this.client.core.pairing.updateMetadata({topic:l,metadata:_.peer.metadata}),q(U)}}),!l){const{message:P}=i.getInternalError(\"NO_MATCHING_KEY\",`connect() pairing topic: ${l}`);throw new Error(P)}const G=await this.sendRequest({topic:l,method:\"wc_sessionPropose\",params:N,throwOnFailedPublish:!0});return await this.setProposal(G,m({id:G},N)),{uri:p,approval:W}},this.pair=async e=>(await this.isInitialized(),await this.client.core.pairing.pair(e)),this.approve=async e=>{await this.isInitialized(),await this.isValidApprove(e);const{id:s,relayProtocol:t,namespaces:r,sessionProperties:o}=e,a=this.client.proposal.get(s);let{pairingTopic:c,proposer:l,requiredNamespaces:p,optionalNamespaces:u}=a;c=c||\"\";const d=await this.client.core.crypto.generateKeyPair(),R=l.publicKey,w=await this.client.core.crypto.generateSharedKey(d,R);c&&s&&(await this.client.core.pairing.updateMetadata({topic:c,metadata:l.metadata}),await this.sendResult({id:s,topic:c,result:{relay:{protocol:t??\"irn\"},responderPublicKey:d}}),await this.client.proposal.delete(s,i.getSdkError(\"USER_DISCONNECTED\")),await this.client.core.pairing.activate({topic:c}));const N=m({relay:{protocol:t??\"irn\"},namespaces:r,pairingTopic:c,controller:{publicKey:d,metadata:this.client.metadata},expiry:i.calcExpiry(v)},o&&{sessionProperties:o});await this.client.core.relayer.subscribe(w);const C=f(m({},N),{topic:w,requiredNamespaces:p,optionalNamespaces:u,pairingTopic:c,acknowledged:!1,self:N.controller,peer:{publicKey:l.publicKey,metadata:l.metadata},controller:d});await this.client.session.set(w,C);try{await this.sendRequest({topic:w,method:\"wc_sessionSettle\",params:N,throwOnFailedPublish:!0})}catch(q){throw this.client.logger.error(q),this.client.session.delete(w,i.getSdkError(\"USER_DISCONNECTED\")),await this.client.core.relayer.unsubscribe(w),q}return await this.setExpiry(w,i.calcExpiry(v)),{topic:w,acknowledged:()=>new Promise(q=>setTimeout(()=>q(this.client.session.get(w)),500))}},this.reject=async e=>{await this.isInitialized(),await this.isValidReject(e);const{id:s,reason:t}=e,{pairingTopic:r}=this.client.proposal.get(s);r&&(await this.sendError(s,r,t),await this.client.proposal.delete(s,i.getSdkError(\"USER_DISCONNECTED\")))},this.update=async e=>{await this.isInitialized(),await this.isValidUpdate(e);const{topic:s,namespaces:t}=e,r=await this.sendRequest({topic:s,method:\"wc_sessionUpdate\",params:{namespaces:t}}),{done:o,resolve:a,reject:c}=i.createDelayedPromise();return this.events.once(i.engineEvent(\"session_update\",r),({error:l})=>{l?c(l):a()}),await this.client.session.update(s,{namespaces:t}),{acknowledged:o}},this.extend=async e=>{await this.isInitialized(),await this.isValidExtend(e);const{topic:s}=e,t=await this.sendRequest({topic:s,method:\"wc_sessionExtend\",params:{}}),{done:r,resolve:o,reject:a}=i.createDelayedPromise();return this.events.once(i.engineEvent(\"session_extend\",t),({error:c})=>{c?a(c):o()}),await this.setExpiry(s,i.calcExpiry(v)),{acknowledged:r}},this.request=async e=>{await this.isInitialized(),await this.isValidRequest(e);const{chainId:s,request:t,topic:r,expiry:o=I.wc_sessionRequest.req.ttl}=e,a=g.payloadId(),{done:c,resolve:l,reject:p}=i.createDelayedPromise(o,\"Request expired. Please try again.\");return this.events.once(i.engineEvent(\"session_request\",a),({error:u,result:d})=>{u?p(u):l(d)}),await Promise.all([new Promise(async u=>{await this.sendRequest({clientRpcId:a,topic:r,method:\"wc_sessionRequest\",params:{request:f(m({},t),{expiryTimestamp:i.calcExpiry(o)}),chainId:s},expiry:o,throwOnFailedPublish:!0}).catch(d=>p(d)),this.client.events.emit(\"session_request_sent\",{topic:r,request:t,chainId:s,id:a}),u()}),new Promise(async u=>{const d=await i.getDeepLink(this.client.core.storage,M);i.handleDeeplinkRedirect({id:a,topic:r,wcDeepLink:d}),u()}),c()]).then(u=>u[2])},this.respond=async e=>{await this.isInitialized(),await this.isValidRespond(e);const{topic:s,response:t}=e,{id:r}=t;g.isJsonRpcResult(t)?await this.sendResult({id:r,topic:s,result:t.result,throwOnFailedPublish:!0}):g.isJsonRpcError(t)&&await this.sendError(r,s,t.error),this.cleanupAfterResponse(e)},this.ping=async e=>{await this.isInitialized(),await this.isValidPing(e);const{topic:s}=e;if(this.client.session.keys.includes(s)){const t=await this.sendRequest({topic:s,method:\"wc_sessionPing\",params:{}}),{done:r,resolve:o,reject:a}=i.createDelayedPromise();this.events.once(i.engineEvent(\"session_ping\",t),({error:c})=>{c?a(c):o()}),await r()}else this.client.core.pairing.pairings.keys.includes(s)&&await this.client.core.pairing.ping({topic:s})},this.emit=async e=>{await this.isInitialized(),await this.isValidEmit(e);const{topic:s,event:t,chainId:r}=e;await this.sendRequest({topic:s,method:\"wc_sessionEvent\",params:{event:t,chainId:r}})},this.disconnect=async e=>{await this.isInitialized(),await this.isValidDisconnect(e);const{topic:s}=e;if(this.client.session.keys.includes(s))await this.sendRequest({topic:s,method:\"wc_sessionDelete\",params:i.getSdkError(\"USER_DISCONNECTED\"),throwOnFailedPublish:!0}),await this.deleteSession({topic:s,emitEvent:!1});else if(this.client.core.pairing.pairings.keys.includes(s))await this.client.core.pairing.disconnect({topic:s});else{const{message:t}=i.getInternalError(\"MISMATCHED_TOPIC\",`Session or pairing topic not found: ${s}`);throw new Error(t)}},this.find=e=>(this.isInitialized(),this.client.session.getAll().filter(s=>i.isSessionCompatible(s,e))),this.getPendingSessionRequests=()=>this.client.pendingRequest.getAll(),this.cleanupDuplicatePairings=async e=>{if(e.pairingTopic)try{const s=this.client.core.pairing.pairings.get(e.pairingTopic),t=this.client.core.pairing.pairings.getAll().filter(r=>{var o,a;return((o=r.peerMetadata)==null?void 0:o.url)&&((a=r.peerMetadata)==null?void 0:a.url)===e.peer.metadata.url&&r.topic&&r.topic!==s.topic});if(t.length===0)return;this.client.logger.info(`Cleaning up ${t.length} duplicate pairing(s)`),await Promise.all(t.map(r=>this.client.core.pairing.disconnect({topic:r.topic}))),this.client.logger.info(\"Duplicate pairings clean up finished\")}catch(s){this.client.logger.error(s)}},this.deleteSession=async e=>{const{topic:s,expirerHasDeleted:t=!1,emitEvent:r=!0,id:o=0}=e,{self:a}=this.client.session.get(s);await this.client.core.relayer.unsubscribe(s),await this.client.session.delete(s,i.getSdkError(\"USER_DISCONNECTED\")),this.client.core.crypto.keychain.has(a.publicKey)&&await this.client.core.crypto.deleteKeyPair(a.publicKey),this.client.core.crypto.keychain.has(s)&&await this.client.core.crypto.deleteSymKey(s),t||this.client.core.expirer.del(s),this.client.core.storage.removeItem(M).catch(c=>this.client.logger.warn(c)),this.getPendingSessionRequests().forEach(c=>{c.topic===s&&this.deletePendingSessionRequest(c.id,i.getSdkError(\"USER_DISCONNECTED\"))}),r&&this.client.events.emit(\"session_delete\",{id:o,topic:s})},this.deleteProposal=async(e,s)=>{await Promise.all([this.client.proposal.delete(e,i.getSdkError(\"USER_DISCONNECTED\")),s?Promise.resolve():this.client.core.expirer.del(e)])},this.deletePendingSessionRequest=async(e,s,t=!1)=>{await Promise.all([this.client.pendingRequest.delete(e,s),t?Promise.resolve():this.client.core.expirer.del(e)]),this.sessionRequestQueue.queue=this.sessionRequestQueue.queue.filter(r=>r.id!==e),t&&(this.sessionRequestQueue.state=y.idle,this.client.events.emit(\"session_request_expire\",{id:e}))},this.setExpiry=async(e,s)=>{this.client.session.keys.includes(e)&&await this.client.session.update(e,{expiry:s}),this.client.core.expirer.set(e,s)},this.setProposal=async(e,s)=>{await this.client.proposal.set(e,s),this.client.core.expirer.set(e,i.calcExpiry(I.wc_sessionPropose.req.ttl))},this.setPendingSessionRequest=async e=>{const{id:s,topic:t,params:r,verifyContext:o}=e,a=r.request.expiryTimestamp||i.calcExpiry(I.wc_sessionRequest.req.ttl);await this.client.pendingRequest.set(s,{id:s,topic:t,params:r,verifyContext:o}),a&&this.client.core.expirer.set(s,a)},this.sendRequest=async e=>{const{topic:s,method:t,params:r,expiry:o,relayRpcId:a,clientRpcId:c,throwOnFailedPublish:l}=e,p=g.formatJsonRpcRequest(t,r,c);if(i.isBrowser()&&X.includes(t)){const R=i.hashMessage(JSON.stringify(p));this.client.core.verify.register({attestationId:R})}const u=await this.client.core.crypto.encode(s,p),d=I[t].req;return o&&(d.ttl=o),a&&(d.id=a),this.client.core.history.set(s,p),l?(d.internal=f(m({},d.internal),{throwOnFailedPublish:!0}),await this.client.core.relayer.publish(s,u,d)):this.client.core.relayer.publish(s,u,d).catch(R=>this.client.logger.error(R)),p.id},this.sendResult=async e=>{const{id:s,topic:t,result:r,throwOnFailedPublish:o}=e,a=g.formatJsonRpcResult(s,r),c=await this.client.core.crypto.encode(t,a),l=await this.client.core.history.get(t,s),p=I[l.request.method].res;o?(p.internal=f(m({},p.internal),{throwOnFailedPublish:!0}),await this.client.core.relayer.publish(t,c,p)):this.client.core.relayer.publish(t,c,p).catch(u=>this.client.logger.error(u)),await this.client.core.history.resolve(a)},this.sendError=async(e,s,t)=>{const r=g.formatJsonRpcError(e,t),o=await this.client.core.crypto.encode(s,r),a=await this.client.core.history.get(s,e),c=I[a.request.method].res;this.client.core.relayer.publish(s,o,c),await this.client.core.history.resolve(r)},this.cleanup=async()=>{const e=[],s=[];this.client.session.getAll().forEach(t=>{let r=!1;i.isExpired(t.expiry)&&(r=!0),this.client.core.crypto.keychain.has(t.topic)||(r=!0),r&&e.push(t.topic)}),this.client.proposal.getAll().forEach(t=>{i.isExpired(t.expiryTimestamp)&&s.push(t.id)}),await Promise.all([...e.map(t=>this.deleteSession({topic:t})),...s.map(t=>this.deleteProposal(t))])},this.onRelayEventRequest=async e=>{this.requestQueue.queue.push(e),await this.processRequestsQueue()},this.processRequestsQueue=async()=>{if(this.requestQueue.state===y.active){this.client.logger.info(\"Request queue already active, skipping...\");return}for(this.client.logger.info(`Request queue starting with ${this.requestQueue.queue.length} requests`);this.requestQueue.queue.length>0;){this.requestQueue.state=y.active;const e=this.requestQueue.queue.shift();if(e)try{this.processRequest(e),await new Promise(s=>setTimeout(s,300))}catch(s){this.client.logger.warn(s)}}this.requestQueue.state=y.idle},this.processRequest=e=>{const{topic:s,payload:t}=e,r=t.method;switch(r){case\"wc_sessionPropose\":return this.onSessionProposeRequest(s,t);case\"wc_sessionSettle\":return this.onSessionSettleRequest(s,t);case\"wc_sessionUpdate\":return this.onSessionUpdateRequest(s,t);case\"wc_sessionExtend\":return this.onSessionExtendRequest(s,t);case\"wc_sessionPing\":return this.onSessionPingRequest(s,t);case\"wc_sessionDelete\":return this.onSessionDeleteRequest(s,t);case\"wc_sessionRequest\":return this.onSessionRequest(s,t);case\"wc_sessionEvent\":return this.onSessionEventRequest(s,t);default:return this.client.logger.info(`Unsupported request method ${r}`)}},this.onRelayEventResponse=async e=>{const{topic:s,payload:t}=e,r=(await this.client.core.history.get(s,t.id)).request.method;switch(r){case\"wc_sessionPropose\":return this.onSessionProposeResponse(s,t);case\"wc_sessionSettle\":return this.onSessionSettleResponse(s,t);case\"wc_sessionUpdate\":return this.onSessionUpdateResponse(s,t);case\"wc_sessionExtend\":return this.onSessionExtendResponse(s,t);case\"wc_sessionPing\":return this.onSessionPingResponse(s,t);case\"wc_sessionRequest\":return this.onSessionRequestResponse(s,t);default:return this.client.logger.info(`Unsupported response method ${r}`)}},this.onRelayEventUnknownPayload=e=>{const{topic:s}=e,{message:t}=i.getInternalError(\"MISSING_OR_INVALID\",`Decoded payload on topic ${s} is not identifiable as a JSON-RPC request or a response.`);throw new Error(t)},this.onSessionProposeRequest=async(e,s)=>{const{params:t,id:r}=s;try{this.isValidConnect(m({},s.params));const o=t.expiryTimestamp||i.calcExpiry(I.wc_sessionPropose.req.ttl),a=m({id:r,pairingTopic:e,expiryTimestamp:o},t);await this.setProposal(r,a);const c=i.hashMessage(JSON.stringify(s)),l=await this.getVerifyContext(c,a.proposer.metadata);this.client.events.emit(\"session_proposal\",{id:r,params:a,verifyContext:l})}catch(o){await this.sendError(r,e,o),this.client.logger.error(o)}},this.onSessionProposeResponse=async(e,s)=>{const{id:t}=s;if(g.isJsonRpcResult(s)){const{result:r}=s;this.client.logger.trace({type:\"method\",method:\"onSessionProposeResponse\",result:r});const o=this.client.proposal.get(t);this.client.logger.trace({type:\"method\",method:\"onSessionProposeResponse\",proposal:o});const a=o.proposer.publicKey;this.client.logger.trace({type:\"method\",method:\"onSessionProposeResponse\",selfPublicKey:a});const c=r.responderPublicKey;this.client.logger.trace({type:\"method\",method:\"onSessionProposeResponse\",peerPublicKey:c});const l=await this.client.core.crypto.generateSharedKey(a,c);this.client.logger.trace({type:\"method\",method:\"onSessionProposeResponse\",sessionTopic:l});const p=await this.client.core.relayer.subscribe(l);this.client.logger.trace({type:\"method\",method:\"onSessionProposeResponse\",subscriptionId:p}),await this.client.core.pairing.activate({topic:e})}else g.isJsonRpcError(s)&&(await this.client.proposal.delete(t,i.getSdkError(\"USER_DISCONNECTED\")),this.events.emit(i.engineEvent(\"session_connect\"),{error:s.error}))},this.onSessionSettleRequest=async(e,s)=>{const{id:t,params:r}=s;try{this.isValidSessionSettleRequest(r);const{relay:o,controller:a,expiry:c,namespaces:l,sessionProperties:p,pairingTopic:u}=s.params,d=m({topic:e,relay:o,expiry:c,namespaces:l,acknowledged:!0,pairingTopic:u,requiredNamespaces:{},optionalNamespaces:{},controller:a.publicKey,self:{publicKey:\"\",metadata:this.client.metadata},peer:{publicKey:a.publicKey,metadata:a.metadata}},p&&{sessionProperties:p});await this.sendResult({id:s.id,topic:e,result:!0}),this.events.emit(i.engineEvent(\"session_connect\"),{session:d}),this.cleanupDuplicatePairings(d)}catch(o){await this.sendError(t,e,o),this.client.logger.error(o)}},this.onSessionSettleResponse=async(e,s)=>{const{id:t}=s;g.isJsonRpcResult(s)?(await this.client.session.update(e,{acknowledged:!0}),this.events.emit(i.engineEvent(\"session_approve\",t),{})):g.isJsonRpcError(s)&&(await this.client.session.delete(e,i.getSdkError(\"USER_DISCONNECTED\")),this.events.emit(i.engineEvent(\"session_approve\",t),{error:s.error}))},this.onSessionUpdateRequest=async(e,s)=>{const{params:t,id:r}=s;try{const o=`${e}_session_update`,a=i.MemoryStore.get(o);if(a&&this.isRequestOutOfSync(a,r)){this.client.logger.info(`Discarding out of sync request - ${r}`);return}this.isValidUpdate(m({topic:e},t)),await this.client.session.update(e,{namespaces:t.namespaces}),await this.sendResult({id:r,topic:e,result:!0}),this.client.events.emit(\"session_update\",{id:r,topic:e,params:t}),i.MemoryStore.set(o,r)}catch(o){await this.sendError(r,e,o),this.client.logger.error(o)}},this.isRequestOutOfSync=(e,s)=>parseInt(s.toString().slice(0,-3))<=parseInt(e.toString().slice(0,-3)),this.onSessionUpdateResponse=(e,s)=>{const{id:t}=s;g.isJsonRpcResult(s)?this.events.emit(i.engineEvent(\"session_update\",t),{}):g.isJsonRpcError(s)&&this.events.emit(i.engineEvent(\"session_update\",t),{error:s.error})},this.onSessionExtendRequest=async(e,s)=>{const{id:t}=s;try{this.isValidExtend({topic:e}),await this.setExpiry(e,i.calcExpiry(v)),await this.sendResult({id:t,topic:e,result:!0}),this.client.events.emit(\"session_extend\",{id:t,topic:e})}catch(r){await this.sendError(t,e,r),this.client.logger.error(r)}},this.onSessionExtendResponse=(e,s)=>{const{id:t}=s;g.isJsonRpcResult(s)?this.events.emit(i.engineEvent(\"session_extend\",t),{}):g.isJsonRpcError(s)&&this.events.emit(i.engineEvent(\"session_extend\",t),{error:s.error})},this.onSessionPingRequest=async(e,s)=>{const{id:t}=s;try{this.isValidPing({topic:e}),await this.sendResult({id:t,topic:e,result:!0}),this.client.events.emit(\"session_ping\",{id:t,topic:e})}catch(r){await this.sendError(t,e,r),this.client.logger.error(r)}},this.onSessionPingResponse=(e,s)=>{const{id:t}=s;setTimeout(()=>{g.isJsonRpcResult(s)?this.events.emit(i.engineEvent(\"session_ping\",t),{}):g.isJsonRpcError(s)&&this.events.emit(i.engineEvent(\"session_ping\",t),{error:s.error})},500)},this.onSessionDeleteRequest=async(e,s)=>{const{id:t}=s;try{this.isValidDisconnect({topic:e,reason:s.params}),await Promise.all([new Promise(r=>{this.client.core.relayer.once(S.RELAYER_EVENTS.publish,async()=>{r(await this.deleteSession({topic:e,id:t}))})}),this.sendResult({id:t,topic:e,result:!0}),this.cleanupPendingSentRequestsForTopic({topic:e,error:i.getSdkError(\"USER_DISCONNECTED\")})])}catch(r){this.client.logger.error(r)}},this.onSessionRequest=async(e,s)=>{const{id:t,params:r}=s;try{this.isValidRequest(m({topic:e},r));const o=i.hashMessage(JSON.stringify(g.formatJsonRpcRequest(\"wc_sessionRequest\",r,t))),a=this.client.session.get(e),c=await this.getVerifyContext(o,a.peer.metadata),l={id:t,topic:e,params:r,verifyContext:c};await this.setPendingSessionRequest(l),this.addSessionRequestToSessionRequestQueue(l),this.processSessionRequestQueue()}catch(o){await this.sendError(t,e,o),this.client.logger.error(o)}},this.onSessionRequestResponse=(e,s)=>{const{id:t}=s;g.isJsonRpcResult(s)?this.events.emit(i.engineEvent(\"session_request\",t),{result:s.result}):g.isJsonRpcError(s)&&this.events.emit(i.engineEvent(\"session_request\",t),{error:s.error})},this.onSessionEventRequest=async(e,s)=>{const{id:t,params:r}=s;try{const o=`${e}_session_event_${r.event.name}`,a=i.MemoryStore.get(o);if(a&&this.isRequestOutOfSync(a,t)){this.client.logger.info(`Discarding out of sync request - ${t}`);return}this.isValidEmit(m({topic:e},r)),this.client.events.emit(\"session_event\",{id:t,topic:e,params:r}),i.MemoryStore.set(o,t)}catch(o){await this.sendError(t,e,o),this.client.logger.error(o)}},this.addSessionRequestToSessionRequestQueue=e=>{this.sessionRequestQueue.queue.push(e)},this.cleanupAfterResponse=e=>{this.deletePendingSessionRequest(e.response.id,{message:\"fulfilled\",code:0}),setTimeout(()=>{this.sessionRequestQueue.state=y.idle,this.processSessionRequestQueue()},h.toMiliseconds(this.requestQueueDelay))},this.cleanupPendingSentRequestsForTopic=({topic:e,error:s})=>{const t=this.client.core.history.pending;t.length>0&&t.filter(r=>r.topic===e&&r.request.method===\"wc_sessionRequest\").forEach(r=>{this.events.emit(i.engineEvent(\"session_request\",r.request.id),{error:s})})},this.processSessionRequestQueue=()=>{if(this.sessionRequestQueue.state===y.active){this.client.logger.info(\"session request queue is already active.\");return}const e=this.sessionRequestQueue.queue[0];if(!e){this.client.logger.info(\"session request queue is empty.\");return}try{this.sessionRequestQueue.state=y.active,this.client.events.emit(\"session_request\",e)}catch(s){this.client.logger.error(s)}},this.onPairingCreated=e=>{if(e.active)return;const s=this.client.proposal.getAll().find(t=>t.pairingTopic===e.topic);s&&this.onSessionProposeRequest(e.topic,g.formatJsonRpcRequest(\"wc_sessionPropose\",{requiredNamespaces:s.requiredNamespaces,optionalNamespaces:s.optionalNamespaces,relays:s.relays,proposer:s.proposer,sessionProperties:s.sessionProperties},s.id))},this.isValidConnect=async e=>{if(!i.isValidParams(e)){const{message:c}=i.getInternalError(\"MISSING_OR_INVALID\",`connect() params: ${JSON.stringify(e)}`);throw new Error(c)}const{pairingTopic:s,requiredNamespaces:t,optionalNamespaces:r,sessionProperties:o,relays:a}=e;if(i.isUndefined(s)||await this.isValidPairingTopic(s),!i.isValidRelays(a,!0)){const{message:c}=i.getInternalError(\"MISSING_OR_INVALID\",`connect() relays: ${a}`);throw new Error(c)}!i.isUndefined(t)&&i.isValidObject(t)!==0&&this.validateNamespaces(t,\"requiredNamespaces\"),!i.isUndefined(r)&&i.isValidObject(r)!==0&&this.validateNamespaces(r,\"optionalNamespaces\"),i.isUndefined(o)||this.validateSessionProps(o,\"sessionProperties\")},this.validateNamespaces=(e,s)=>{const t=i.isValidRequiredNamespaces(e,\"connect()\",s);if(t)throw new Error(t.message)},this.isValidApprove=async e=>{if(!i.isValidParams(e))throw new Error(i.getInternalError(\"MISSING_OR_INVALID\",`approve() params: ${e}`).message);const{id:s,namespaces:t,relayProtocol:r,sessionProperties:o}=e;await this.isValidProposalId(s);const a=this.client.proposal.get(s),c=i.isValidNamespaces(t,\"approve()\");if(c)throw new Error(c.message);const l=i.isConformingNamespaces(a.requiredNamespaces,t,\"approve()\");if(l)throw new Error(l.message);if(!i.isValidString(r,!0)){const{message:p}=i.getInternalError(\"MISSING_OR_INVALID\",`approve() relayProtocol: ${r}`);throw new Error(p)}i.isUndefined(o)||this.validateSessionProps(o,\"sessionProperties\")},this.isValidReject=async e=>{if(!i.isValidParams(e)){const{message:r}=i.getInternalError(\"MISSING_OR_INVALID\",`reject() params: ${e}`);throw new Error(r)}const{id:s,reason:t}=e;if(await this.isValidProposalId(s),!i.isValidErrorReason(t)){const{message:r}=i.getInternalError(\"MISSING_OR_INVALID\",`reject() reason: ${JSON.stringify(t)}`);throw new Error(r)}},this.isValidSessionSettleRequest=e=>{if(!i.isValidParams(e)){const{message:l}=i.getInternalError(\"MISSING_OR_INVALID\",`onSessionSettleRequest() params: ${e}`);throw new Error(l)}const{relay:s,controller:t,namespaces:r,expiry:o}=e;if(!i.isValidRelay(s)){const{message:l}=i.getInternalError(\"MISSING_OR_INVALID\",\"onSessionSettleRequest() relay protocol should be a string\");throw new Error(l)}const a=i.isValidController(t,\"onSessionSettleRequest()\");if(a)throw new Error(a.message);const c=i.isValidNamespaces(r,\"onSessionSettleRequest()\");if(c)throw new Error(c.message);if(i.isExpired(o)){const{message:l}=i.getInternalError(\"EXPIRED\",\"onSessionSettleRequest()\");throw new Error(l)}},this.isValidUpdate=async e=>{if(!i.isValidParams(e)){const{message:c}=i.getInternalError(\"MISSING_OR_INVALID\",`update() params: ${e}`);throw new Error(c)}const{topic:s,namespaces:t}=e;await this.isValidSessionTopic(s);const r=this.client.session.get(s),o=i.isValidNamespaces(t,\"update()\");if(o)throw new Error(o.message);const a=i.isConformingNamespaces(r.requiredNamespaces,t,\"update()\");if(a)throw new Error(a.message)},this.isValidExtend=async e=>{if(!i.isValidParams(e)){const{message:t}=i.getInternalError(\"MISSING_OR_INVALID\",`extend() params: ${e}`);throw new Error(t)}const{topic:s}=e;await this.isValidSessionTopic(s)},this.isValidRequest=async e=>{if(!i.isValidParams(e)){const{message:c}=i.getInternalError(\"MISSING_OR_INVALID\",`request() params: ${e}`);throw new Error(c)}const{topic:s,request:t,chainId:r,expiry:o}=e;await this.isValidSessionTopic(s);const{namespaces:a}=this.client.session.get(s);if(!i.isValidNamespacesChainId(a,r)){const{message:c}=i.getInternalError(\"MISSING_OR_INVALID\",`request() chainId: ${r}`);throw new Error(c)}if(!i.isValidRequest(t)){const{message:c}=i.getInternalError(\"MISSING_OR_INVALID\",`request() ${JSON.stringify(t)}`);throw new Error(c)}if(!i.isValidNamespacesRequest(a,r,t.method)){const{message:c}=i.getInternalError(\"MISSING_OR_INVALID\",`request() method: ${t.method}`);throw new Error(c)}if(o&&!i.isValidRequestExpiry(o,D)){const{message:c}=i.getInternalError(\"MISSING_OR_INVALID\",`request() expiry: ${o}. Expiry must be a number (in seconds) between ${D.min} and ${D.max}`);throw new Error(c)}},this.isValidRespond=async e=>{var s;if(!i.isValidParams(e)){const{message:o}=i.getInternalError(\"MISSING_OR_INVALID\",`respond() params: ${e}`);throw new Error(o)}const{topic:t,response:r}=e;try{await this.isValidSessionTopic(t)}catch(o){throw(s=e?.response)!=null&&s.id&&this.cleanupAfterResponse(e),o}if(!i.isValidResponse(r)){const{message:o}=i.getInternalError(\"MISSING_OR_INVALID\",`respond() response: ${JSON.stringify(r)}`);throw new Error(o)}},this.isValidPing=async e=>{if(!i.isValidParams(e)){const{message:t}=i.getInternalError(\"MISSING_OR_INVALID\",`ping() params: ${e}`);throw new Error(t)}const{topic:s}=e;await this.isValidSessionOrPairingTopic(s)},this.isValidEmit=async e=>{if(!i.isValidParams(e)){const{message:a}=i.getInternalError(\"MISSING_OR_INVALID\",`emit() params: ${e}`);throw new Error(a)}const{topic:s,event:t,chainId:r}=e;await this.isValidSessionTopic(s);const{namespaces:o}=this.client.session.get(s);if(!i.isValidNamespacesChainId(o,r)){const{message:a}=i.getInternalError(\"MISSING_OR_INVALID\",`emit() chainId: ${r}`);throw new Error(a)}if(!i.isValidEvent(t)){const{message:a}=i.getInternalError(\"MISSING_OR_INVALID\",`emit() event: ${JSON.stringify(t)}`);throw new Error(a)}if(!i.isValidNamespacesEvent(o,r,t.name)){const{message:a}=i.getInternalError(\"MISSING_OR_INVALID\",`emit() event: ${JSON.stringify(t)}`);throw new Error(a)}},this.isValidDisconnect=async e=>{if(!i.isValidParams(e)){const{message:t}=i.getInternalError(\"MISSING_OR_INVALID\",`disconnect() params: ${e}`);throw new Error(t)}const{topic:s}=e;await this.isValidSessionOrPairingTopic(s)},this.getVerifyContext=async(e,s)=>{const t={verified:{verifyUrl:s.verifyUrl||S.VERIFY_SERVER,validation:\"UNKNOWN\",origin:s.url||\"\"}};try{const r=await this.client.core.verify.resolve({attestationId:e,verifyUrl:s.verifyUrl});r&&(t.verified.origin=r.origin,t.verified.isScam=r.isScam,t.verified.validation=r.origin===new URL(s.url).origin?\"VALID\":\"INVALID\")}catch(r){this.client.logger.info(r)}return this.client.logger.info(`Verify context: ${JSON.stringify(t)}`),t},this.validateSessionProps=(e,s)=>{Object.values(e).forEach(t=>{if(!i.isValidString(t,!1)){const{message:r}=i.getInternalError(\"MISSING_OR_INVALID\",`${s} must be in Record<string, string> format. Received: ${JSON.stringify(t)}`);throw new Error(r)}})}}async isInitialized(){if(!this.initialized){const{message:n}=i.getInternalError(\"NOT_INITIALIZED\",this.name);throw new Error(n)}await this.client.core.relayer.confirmOnlineStateOrThrow()}registerRelayerEvents(){this.client.core.relayer.on(S.RELAYER_EVENTS.message,async n=>{const{topic:e,message:s}=n;if(this.ignoredPayloadTypes.includes(this.client.core.crypto.getPayloadType(s)))return;const t=await this.client.core.crypto.decode(e,s);try{g.isJsonRpcRequest(t)?(this.client.core.history.set(e,t),this.onRelayEventRequest({topic:e,payload:t})):g.isJsonRpcResponse(t)?(await this.client.core.history.resolve(t),await this.onRelayEventResponse({topic:e,payload:t}),this.client.core.history.delete(e,t.id)):this.onRelayEventUnknownPayload({topic:e,payload:t})}catch(r){this.client.logger.error(r)}})}registerExpirerEvents(){this.client.core.expirer.on(S.EXPIRER_EVENTS.expired,async n=>{const{topic:e,id:s}=i.parseExpirerTarget(n.target);if(s&&this.client.pendingRequest.keys.includes(s))return await this.deletePendingSessionRequest(s,i.getInternalError(\"EXPIRED\"),!0);e?this.client.session.keys.includes(e)&&(await this.deleteSession({topic:e,expirerHasDeleted:!0}),this.client.events.emit(\"session_expire\",{topic:e})):s&&(await this.deleteProposal(s,!0),this.client.events.emit(\"proposal_expire\",{id:s}))})}registerPairingEvents(){this.client.core.pairing.events.on(S.PAIRING_EVENTS.create,n=>this.onPairingCreated(n))}isValidPairingTopic(n){if(!i.isValidString(n,!1)){const{message:e}=i.getInternalError(\"MISSING_OR_INVALID\",`pairing topic should be a string: ${n}`);throw new Error(e)}if(!this.client.core.pairing.pairings.keys.includes(n)){const{message:e}=i.getInternalError(\"NO_MATCHING_KEY\",`pairing topic doesn't exist: ${n}`);throw new Error(e)}if(i.isExpired(this.client.core.pairing.pairings.get(n).expiry)){const{message:e}=i.getInternalError(\"EXPIRED\",`pairing topic: ${n}`);throw new Error(e)}}async isValidSessionTopic(n){if(!i.isValidString(n,!1)){const{message:e}=i.getInternalError(\"MISSING_OR_INVALID\",`session topic should be a string: ${n}`);throw new Error(e)}if(!this.client.session.keys.includes(n)){const{message:e}=i.getInternalError(\"NO_MATCHING_KEY\",`session topic doesn't exist: ${n}`);throw new Error(e)}if(i.isExpired(this.client.session.get(n).expiry)){await this.deleteSession({topic:n});const{message:e}=i.getInternalError(\"EXPIRED\",`session topic: ${n}`);throw new Error(e)}if(!this.client.core.crypto.keychain.has(n)){const{message:e}=i.getInternalError(\"MISSING_OR_INVALID\",`session topic does not exist in keychain: ${n}`);throw await this.deleteSession({topic:n}),new Error(e)}}async isValidSessionOrPairingTopic(n){if(this.client.session.keys.includes(n))await this.isValidSessionTopic(n);else if(this.client.core.pairing.pairings.keys.includes(n))this.isValidPairingTopic(n);else if(i.isValidString(n,!1)){const{message:e}=i.getInternalError(\"NO_MATCHING_KEY\",`session or pairing topic doesn't exist: ${n}`);throw new Error(e)}else{const{message:e}=i.getInternalError(\"MISSING_OR_INVALID\",`session or pairing topic should be a string: ${n}`);throw new Error(e)}}async isValidProposalId(n){if(!i.isValidId(n)){const{message:e}=i.getInternalError(\"MISSING_OR_INVALID\",`proposal id should be a number: ${n}`);throw new Error(e)}if(!this.client.proposal.keys.includes(n)){const{message:e}=i.getInternalError(\"NO_MATCHING_KEY\",`proposal id doesn't exist: ${n}`);throw new Error(e)}if(i.isExpired(this.client.proposal.get(n).expiryTimestamp)){await this.deleteProposal(n);const{message:e}=i.getInternalError(\"EXPIRED\",`proposal id: ${n}`);throw new Error(e)}}}class de extends S.Store{constructor(n,e){super(n,e,Y,T),this.core=n,this.logger=e}}class H extends S.Store{constructor(n,e){super(n,e,J,T),this.core=n,this.logger=e}}class ge extends S.Store{constructor(n,e){super(n,e,F,T,s=>s.id),this.core=n,this.logger=e}}class x extends $.ISignClient{constructor(n){super(n),this.protocol=A,this.version=L,this.name=V.name,this.events=new k.EventEmitter,this.on=(s,t)=>this.events.on(s,t),this.once=(s,t)=>this.events.once(s,t),this.off=(s,t)=>this.events.off(s,t),this.removeListener=(s,t)=>this.events.removeListener(s,t),this.removeAllListeners=s=>this.events.removeAllListeners(s),this.connect=async s=>{try{return await this.engine.connect(s)}catch(t){throw this.logger.error(t.message),t}},this.pair=async s=>{try{return await this.engine.pair(s)}catch(t){throw this.logger.error(t.message),t}},this.approve=async s=>{try{return await this.engine.approve(s)}catch(t){throw this.logger.error(t.message),t}},this.reject=async s=>{try{return await this.engine.reject(s)}catch(t){throw this.logger.error(t.message),t}},this.update=async s=>{try{return await this.engine.update(s)}catch(t){throw this.logger.error(t.message),t}},this.extend=async s=>{try{return await this.engine.extend(s)}catch(t){throw this.logger.error(t.message),t}},this.request=async s=>{try{return await this.engine.request(s)}catch(t){throw this.logger.error(t.message),t}},this.respond=async s=>{try{return await this.engine.respond(s)}catch(t){throw this.logger.error(t.message),t}},this.ping=async s=>{try{return await this.engine.ping(s)}catch(t){throw this.logger.error(t.message),t}},this.emit=async s=>{try{return await this.engine.emit(s)}catch(t){throw this.logger.error(t.message),t}},this.disconnect=async s=>{try{return await this.engine.disconnect(s)}catch(t){throw this.logger.error(t.message),t}},this.find=s=>{try{return this.engine.find(s)}catch(t){throw this.logger.error(t.message),t}},this.getPendingSessionRequests=()=>{try{return this.engine.getPendingSessionRequests()}catch(s){throw this.logger.error(s.message),s}},this.name=n?.name||V.name,this.metadata=n?.metadata||i.getAppMetadata();const e=typeof n?.logger<\"u\"&&typeof n?.logger!=\"string\"?n.logger:O.pino(O.getDefaultLoggerOptions({level:n?.logger||V.logger}));this.core=n?.core||new S.Core(n),this.logger=O.generateChildLogger(e,this.name),this.session=new H(this.core,this.logger),this.proposal=new de(this.core,this.logger),this.pendingRequest=new ge(this.core,this.logger),this.engine=new he(this)}static async init(n){const e=new x(n);return await e.initialize(),e}get context(){return O.getLoggerContext(this.logger)}get pairing(){return this.core.pairing.pairings}async initialize(){this.logger.trace(\"Initialized\");try{await this.core.start(),await this.session.init(),await this.proposal.init(),await this.pendingRequest.init(),await this.engine.init(),this.core.verify.init({verifyUrl:this.metadata.verifyUrl}),this.logger.info(\"SignClient Initialization Success\")}catch(n){throw this.logger.info(\"SignClient Initialization Failure\"),this.logger.error(n.message),n}}}const ue=H,Ee=x;exports.ENGINE_CONTEXT=K,exports.ENGINE_QUEUE_STATES=y,exports.ENGINE_RPC_OPTS=I,exports.HISTORY_CONTEXT=ie,exports.HISTORY_EVENTS=te,exports.HISTORY_STORAGE_VERSION=re,exports.METHODS_TO_VERIFY=X,exports.PROPOSAL_CONTEXT=Y,exports.PROPOSAL_EXPIRY=ne,exports.PROPOSAL_EXPIRY_MESSAGE=Q,exports.REQUEST_CONTEXT=F,exports.SESSION_CONTEXT=J,exports.SESSION_EXPIRY=v,exports.SESSION_REQUEST_EXPIRY_BOUNDARIES=D,exports.SIGN_CLIENT_CONTEXT=b,exports.SIGN_CLIENT_DEFAULT=V,exports.SIGN_CLIENT_EVENTS=ee,exports.SIGN_CLIENT_PROTOCOL=A,exports.SIGN_CLIENT_STORAGE_OPTIONS=se,exports.SIGN_CLIENT_STORAGE_PREFIX=T,exports.SIGN_CLIENT_VERSION=L,exports.SessionStore=ue,exports.SignClient=Ee,exports.WALLETCONNECT_DEEPLINK_CHOICE=M,exports[\"default\"]=x;\n//# sourceMappingURL=index.cjs.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/../../node_modules/.pnpm/@walletconnect+sign-client@2.11.1_@upstash+redis@1.25.1_bufferutil@4.0.7_encoding@0.1.13/node_modules/@walletconnect/sign-client/dist/index.cjs.js\n");

/***/ })

};
;